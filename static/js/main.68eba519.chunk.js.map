{"version":3,"sources":["Enums/EAccents.ts","Enums/ENoteTypes.ts","Enums/EStickings.ts","Enums/ENoteDuration.ts","Enums/ENotePlacement.ts","models/Note.ts","models/Measure.ts","models/Exercise.ts","engines/RandomizerEngine.ts","engines/ValidationEngine.ts","Enums/EStickingStyle.ts","engines/ExcerciseEngine.ts","models/GenerateSheetMusicConfig.ts","models/Header.ts","commonComponents/RadioButtonArrayTab.tsx","commonComponents/SwitchArrayTab.tsx","audioComponents/AudioSampler.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["EAccents","ENoteTypes","EStickings","ENoteDuration","ENotePlacement","Note","noteType","rest","duration","sixteenth","sticking","None","accent","notAccented","placedByUser","this","Measure","subdivision","notes","noteDuration","eighth","quarter","half","Error","i","push","none","Exercise","sheetMusic","measures","bpm","length","measure","snare","RandomizerEngine","items","constraints","termination","result","newItem","getRandomItemSelection","previousItems","itemsToAdd","insertion","forEach","item","added","randomItem","inputArray","shouldIgnore","j","Math","floor","random","min","max","ValidationEngine","configIsValid","config","errorList","notePlacementsValid","notePlacementsAreValid","maxConsecutiveNotesValid","maxConsecutiveNotesAreValid","noteCountsValid","noteCountsAreValid","notePlacementsDoNotExceedCounts","notePlacementsDoNotExceedNoteCounts","snares","snareNoteCountEnabled","snareNoteCount","kicks","kickNoteCountEnabled","kickNoteCount","rests","restNoteCountEnabled","restNoteCount","accents","accentNoteCountEnabled","accentNoteCount","maxConsecutiveSnares","maxConsecutiveKicks","maxConsecutiveAccents","maxConsecutiveRests","lefts","maxConsecutiveLeftHandStickings","rights","maxConsecutiveRightHandStickings","mandatorySnarePlacements","mandatoryKickPlacements","mandatoryAccentPlacements","mandatoryRestPlacements","snareHasDuplicates","Set","size","kicksHasDuplicates","accentsHasDuplicates","restsHasDuplicates","overlappingSnareAndKickNotes","filter","value","includes","overlappingSnareAndRestNotes","overlappingKickAndSnareNotes","overlappingKickAndRestNotes","overlappingRestAndSnareNotes","overlappingRestAndKickNotes","snarePlacements","kickPlacements","accentPlacements","restPlacements","snaresValid","kicksValid","accentsValid","restsValid","EStickingStyle","ExerciseEngine","generateNewSheetMusic","header","generateHeaderString","generateMeasure","Array","isArray","addStickingToMeasure","addAccentsToMeasure","formattedResult","format","abcjsString","e","message","title","meter","composer","key","translateLengthToFractionString","resultString","note","index","noteString","Left","Right","accented","kick","stickingStyle","alternating","lastHit","naturalSticking","randomIndex","randomNumberInRange","rightHandDoesNotExceedCount","noteVarietyDoesNotExceedConsecutiveCount","noteToCheck","leftHandDoesNotExceedCount","placement","mapNotePlacementToIndex","count","availableSnares","addNoteCountToMeasure","randomValidUnsetAccent","firstUnsetNoteType","find","notesChecked","shouldIgnoreInShufflingNotes","addMandatoryNotesToEmptyMeasure","shuffleArray","optionsChecked","acceptableNoteFound","maximumNumber","mandatoryNotes","noteAtIndex","getNoteToUpdate","noteToUpdate","one","oneE","oneAnd","oneA","two","twoE","twoAnd","twoA","three","threeE","threeAnd","threeA","four","fourE","fourAnd","fourA","isNoteVariety","consecutiveCount","hasNotSurpassedConsecutiveCount","GenerateSheetMusicConfig","translateLengthToInt","Header","RadioButtonArrayTab","props","setConfig","selection","setSelection","mode","toString","getConfigFieldFromSelection","checked","classes","makeStyles","theme","createStyles","root","display","flexDirection","alignItems","margin","spacing","formControl","minWidth","cardRoot","bullet","transform","fontSize","pos","marginBottom","useStyles","Card","className","CardContent","FormControl","InputLabel","id","Select","labelId","onChange","event","target","MenuItem","FormControlLabel","label","control","Switch","newConfig","name","component","FormLabel","RadioGroup","aria-label","setConfigFieldFromSelection","parseInt","Paper","Radio","SwitchArrayTab","switchIdentifier","handleChange","notePlacement","addConfigFieldFromSelection","findIndex","splice","removeConfigFieldFromSelection","FormGroup","FormHelperText","AudioSampler","context","buffer","source","gain","createBufferSource","createGain","connect","destination","time","setup","setValueAtTime","start","App","useState","savedExercises","setSavedExercises","currentExercise","setCurrentExercise","exercisesGenerated","setExercisesGenerated","tabIndex","setTabIndex","consecutiveHitsSelection","setConsecutiveHitsSelection","noteCountSelection","setNoteCountSelection","mandatoryNotePlacementSelection","setMandatoryNotePlacementSelection","measureName","setMeasureName","setErrorList","hiHatOnPlayback","setHiHatOnPlayback","playTrack","exercise","sixteenthNoteInterval","audioContext","AudioContext","sampleLoader","url","callback","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","withCredentials","send","hasAccents","hiHat","unaccentedHit","trigger","currentTime","useEffect","newErrorList","toolTip","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","map","abcNotation","parserParams","engraverParams","responsive","renderParams","viewportHorizontal","Button","variant","color","onClick","firstIndexOfExercise","indexOf","savedExercisesCopy","TextField","style","marginLeft","currentExerciseCopy","AppBar","position","Tabs","newValue","Tab","CardActions","Tooltip","cursor","disabled","newExercise","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"qMAAKA,E,mHAAAA,O,6BAAAA,I,wBAAAA,M,KAIUA,ICJVC,EDIUD,K,SCJVC,O,iBAAAA,I,eAAAA,I,eAAAA,I,gBAAAA,M,KAOUA,ICPVC,EDOUD,K,SCPVC,O,eAAAA,I,iBAAAA,I,gBAAAA,M,KAMUA,ICNVC,EDMUD,K,SCNVC,O,eAAAA,I,yBAAAA,I,mBAAAA,I,+BAAAA,I,qBAAAA,I,iCAAAA,I,gBAAAA,M,KAUUA,ICVVC,EDUUD,IEYAE,EATX,aAAkM,IAAtLC,EAAqL,uDAA1KL,EAAWM,KAAMC,EAAyJ,uDAA/HL,EAAcM,UAAWC,EAAsG,uDAA/ER,EAAWS,KAAMC,EAA8D,uDAArDZ,EAASa,YAAaC,EAA+B,iFANjMJ,cAMiM,OALjME,YAKiM,OAJjMN,cAIiM,OAHjME,cAGiM,OAFjMM,kBAEiM,EAC7LC,KAAKT,SAAWA,EAChBS,KAAKL,SAAWA,EAChBK,KAAKH,OAASA,EACdG,KAAKP,SAAWA,EAChBO,KAAKD,aAAeA,GCiBbE,EA3BX,WAAYC,GAAsB,yBAFlCC,WAEiC,EAC7BH,KAAKG,MAAQ,GACb,IAAIC,EAAehB,EAAcM,UAEjC,OAAOQ,GACH,KAAK,GACDE,EAAehB,EAAcM,UAC7B,MACJ,KAAK,EACDU,EAAehB,EAAciB,OAC7B,MACJ,KAAK,EACDD,EAAehB,EAAckB,QAC7B,MACJ,KAAK,EACDF,EAAehB,EAAcmB,KAC7B,MACJ,QACI,MAAM,IAAIC,MAAM,2BAGxB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAaO,IAC7BT,KAAKG,MAAMO,KAAK,IAAIpB,EAAKJ,EAAWyB,KAAMP,KCNvCQ,EAfX,WAAYC,EAAoBC,GAAyC,IAApBC,EAAmB,uDAAL,IAK/D,GALoE,yBAJxEF,gBAIwE,OAHxEC,cAGwE,OAFxEC,SAEwE,EACpEf,KAAKa,WAAaA,EAClBb,KAAKc,SAAWA,EAChBd,KAAKe,IAAMA,GAEND,GAAgC,IAApBA,EAASE,OAAc,CAEpC,IADA,IAAMC,EAAU,IAAIhB,EAAQ,IACpBQ,EAAI,EAAGA,EAAI,GAAIA,IACnBQ,EAAQd,MAAMM,GAAGlB,SAAWL,EAAWgC,MAE3CJ,EAASJ,KAAKO,K,QClBpBE,E,+HAEiDC,EACAC,EACAC,GAE/C,IADA,IAAMC,EAAc,IACZD,EAAYC,IAAS,CACzB,IAAIC,EAAUC,EAAuBL,GACjCC,EAAY,GAAD,OAAKE,EAAL,CAAaC,MACxBD,EAAOb,KAAKc,GAGpB,OAAOD,I,0DAG6CG,EAAoBC,EACpBN,EACAO,GAEpD,IAAML,EAAc,GAcpB,OAZAG,EAAcG,SAAQ,SAACC,GAEnB,IADA,IAAIC,GAAQ,GACJA,GAAO,CACX,IAAMC,EAAaP,EAAuBE,GACpCH,EAAUI,EAAUE,EAAME,GAC5BX,EAAY,GAAD,OAAKE,EAAL,CAAaC,OACxBD,EAAOb,KAAKc,GACZO,GAAQ,OAKbR,I,mCAGmBU,EAAiBC,GAC3C,IAAK,IAAIzB,EAAIwB,EAAWjB,OAAS,EAAGP,EAAI,EAAGA,IACvC,IAAIyB,EAAaD,EAAWxB,IAA5B,CAGA,IAAI0B,EAAIC,KAAKC,MAAMD,KAAKE,UAAY7B,EAAI,IACxC,IAAIyB,EAAaD,EAAWE,IAA5B,CAL4C,MAQX,CAACF,EAAWE,GAAIF,EAAWxB,IAA3DwB,EAAWxB,GARgC,KAQ5BwB,EAAWE,GARiB,S,0CAYjBI,EAAaC,GAC5C,OAAOJ,KAAKC,MAAMD,KAAKE,UAAYE,EAAMD,EAAM,GAAKA,O,KAItDd,EAAyB,SAACL,GAC5B,OAAOA,EAAMgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAMJ,UAGnCG,K,SJ3DV9B,O,aAAAA,I,eAAAA,I,mBAAAA,I,eAAAA,I,aAAAA,I,eAAAA,I,mBAAAA,I,eAAAA,I,iBAAAA,I,mBAAAA,I,wBAAAA,I,oBAAAA,I,gBAAAA,I,kBAAAA,I,sBAAAA,I,mBAAAA,M,KAoBUA,QKlBToD,E,kCAAAA,EAEYC,cAAgB,SAACC,EAAkCC,GAC7D,IAAMC,EAAsBJ,EAAiBK,uBAAuBH,EAAQC,GACtEG,EAAoCN,EAAiBO,4BAA4BL,EAAQC,GACzFK,EAA2BR,EAAiBS,mBAAmBP,EAAQC,GACvEO,EAAkCV,EAAiBW,oCAAoCT,EAAQC,GAErG,OAAOC,GAAuBE,GAA4BE,GAAmBE,GAR/EV,EAYaS,mBAAqB,SAACP,EAAkCC,GAMnE,IAAM1C,EAAcyC,EAAOzC,YACvBqB,GAAS,EAEP8B,EAASV,EAAOW,sBAAwBX,EAAOY,gBAAkB,EACjEC,EAAQb,EAAOc,qBAAuBd,EAAOe,eAAiB,EAC9DC,EAAQhB,EAAOiB,qBAAuBjB,EAAOkB,eAAiB,EAC9DC,EAAUnB,EAAOoB,uBAAyBpB,EAAOqB,iBAAmB,EAoC1E,OAjCgB,IAAZX,IAA4B,IAAXG,IAA2B,IAAXG,IAA6B,IAAbG,IACjDvC,GAAS,GAIE,IAAX8B,GAA0B,IAAVM,GAAyB,IAAVH,IAC/BZ,EAAUlC,KAAK,iCACfa,GAAS,IAIT8B,EAASnD,GAAesD,EAAQtD,GAAe4D,EAAU5D,GAAeyD,EAAQzD,KAChF0C,EAAUlC,KAAK,mEACfa,GAAS,GAIR8B,GAAU,GAAKG,GAAS,GAAKG,GAAS,GAAON,EAASG,EAAQG,IAAUzD,IACzE0C,EAAUlC,KAAK,kFACfa,GAAS,GAITuC,EAAUT,IAAsB,IAAZA,IACpBT,EAAUlC,KAAK,gFACfa,GAAS,GAGP8B,EAASG,EAAQG,GAASzD,IAC5B0C,EAAUlC,KAAK,iFACfa,GAAS,GAGNA,GA5DTkB,EA+DaO,4BAA8B,SAACL,EAAkCC,GAC5E,IAAMS,EAASV,EAAOsB,qBAChBT,EAAQb,EAAOuB,oBACfJ,EAAUnB,EAAOwB,sBACjBR,EAAQhB,EAAOyB,oBACfC,EAAQ1B,EAAO2B,gCACfC,EAAS5B,EAAO6B,iCAGtB,OAAe,IAAXnB,GAA0B,IAAVG,GAA2B,IAAZM,GAA2B,IAAVH,GAAyB,IAAVU,GAA0B,IAAXE,IAC9E3B,EAAUlC,KAAK,wFACR,IA1Eb+B,EA+EaK,uBAAyB,SAACH,EAAkCC,GACvE,IAAMS,EAASV,EAAO8B,yBAChBjB,EAAQb,EAAO+B,wBACfZ,EAAUnB,EAAOgC,0BACjBhB,EAAQhB,EAAOiC,wBAEf1E,EAAcyC,EAAOzC,YACvBqB,GAAS,GAGT8B,EAAOrC,OAASd,GAAesD,EAAMxC,OAASd,GAAe4D,EAAQ9C,OAASd,GAAeyD,EAAM3C,OAASd,KAC5G0C,EAAUlC,KAAK,+EACfa,GAAS,GAKT8B,EAAOrC,OAASwC,EAAMxC,OAAS2C,EAAM3C,OAASd,IAC9C0C,EAAUlC,KAAK,uEACfa,GAAS,GAIb,IAAMsD,EAAsB,IAAIC,IAAIzB,GAAS0B,OAAS1B,EAAOrC,OACvDgE,EAAsB,IAAIF,IAAItB,GAAQuB,OAASvB,EAAMxC,OACrDiE,EAAwB,IAAIH,IAAIhB,GAAUiB,OAASjB,EAAQ9C,OAC3DkE,EAAsB,IAAIJ,IAAInB,GAAQoB,OAASpB,EAAM3C,QAEvD6D,GAAsBG,GAAsBC,GAAwBC,KACpEtC,EAAUlC,KAAK,0DACfa,GAAS,GAIb,IAAM4D,EAA+B9B,EAAO+B,QAAO,SAAAC,GAAK,OAAI7B,EAAM8B,SAASD,MACrEE,EAA+BlC,EAAO+B,QAAO,SAAAC,GAAK,OAAI1B,EAAM2B,SAASD,MACrEG,EAA+BhC,EAAM4B,QAAO,SAAAC,GAAK,OAAIhC,EAAOiC,SAASD,MACrEI,EAA8BjC,EAAM4B,QAAO,SAAAC,GAAK,OAAI1B,EAAM2B,SAASD,MACnEK,EAA+B/B,EAAMyB,QAAO,SAAAC,GAAK,OAAIhC,EAAOiC,SAASD,MACrEM,EAA8BhC,EAAMyB,QAAO,SAAAC,GAAK,OAAI7B,EAAM8B,SAASD,MAazE,OAX8C,IAAxCF,EAA6BnE,QACS,IAAxCuE,EAA6BvE,QACW,IAAxCwE,EAA6BxE,QACU,IAAvCyE,EAA4BzE,QACY,IAAxC0E,EAA6B1E,QACU,IAAvC2E,EAA4B3E,SAE5B4B,EAAUlC,KAAK,4CACfa,GAAS,GAGNA,GAnITkB,EAsIaW,oCAAsC,SAACT,EAAkCC,GACpF,IAAMgD,EAAkBjD,EAAO8B,yBACzBoB,EAAiBlD,EAAO+B,wBACxBoB,EAAmBnD,EAAOgC,0BAC1BoB,EAAiBpD,EAAOiC,wBACxBvB,EAASV,EAAOY,eAChBC,EAAQb,EAAOe,cACfC,EAAQhB,EAAOkB,cACfC,EAAUnB,EAAOqB,gBAEjBgC,EAAcJ,EAAgB5E,QAAUqC,IAAWV,EAAOW,sBAC1D2C,EAAaJ,EAAe7E,QAAUwC,IAAUb,EAAOc,qBACvDyC,EAAeJ,EAAiB9E,QAAU8C,IAAYnB,EAAOoB,uBAC7DoC,EAAaJ,EAAe/E,QAAU2C,IAAUhB,EAAOiB,qBAE7D,SAAMoC,GAAeC,GAAcE,GAAcD,KAC7CtD,EAAUlC,KAAK,gHACR,IAOJ+B,IChKV2D,EDgKU3D,K,SChKV2D,O,eAAAA,I,qCAAAA,I,6BAAAA,I,oBAAAA,M,KAOUA,QCKTC,E,kCAAAA,EAEYC,sBAAwB,SAAC3D,GACnC,IACI,IAAM4D,EAASC,EAAqB7D,EAAO4D,QACrCtF,EAAUwF,EAAgB9D,GAChC,GAAI+D,MAAMC,QAAQ1F,GACd,OAAOA,EAEX2F,EAAqB3F,EAAS0B,GAC9BkE,EAAoB5F,EAAS0B,GAC7B,IAAMmE,EAAkBC,EAAO9F,GAC/B,MAAO,CACH+F,YAAY,GAAD,OAAKT,GAAL,OAAcO,GACzBhG,SAAU,CAACG,IAEjB,MAAOgG,GACL,OAAOA,EAAEC,UAKrB,IAAMV,EAAuB,SAACD,GAC1B,MAAM,UAAN,OAAiBA,EAAOY,MAAxB,eAAoCZ,EAAOa,MAA3C,eAAuDb,EAAOc,SAA9D,eAA6Ed,EAAOe,IAApF,eAA8Ff,EAAOgB,kCAArG,OAGER,EAAS,SAAC9F,GAEZ,IAAIuG,EAAe,GAwBnB,OAtBAvG,EAAQd,MAAM0B,SAAQ,SAAC4F,EAAMC,GACzB,IAAIC,EAAaD,EAAQ,IAAM,EAAI,IAAM,GACrCD,EAAK9H,WAAaR,EAAWyI,OAC7BD,GAAuB,OAEvBF,EAAK9H,WAAaR,EAAW0I,QAC7BF,GAAuB,OAEvBF,EAAK5H,SAAWZ,EAAS6I,WACzBH,GAAuB,OAEvBF,EAAKlI,WAAaL,EAAWgC,QAC7ByG,GAA0B,KAE1BF,EAAKlI,WAAaL,EAAW6I,OAC7BJ,GAA0B,MAE1BF,EAAKlI,WAAaL,EAAWM,OAC7BmI,GAA0B,KAE9BH,GAAgBG,KAEd,KAAN,OAAYH,EAAZ,OAGEZ,EAAuB,SAAC3F,EAAkB0B,GAC5C,OAAQA,EAAOqF,eACX,KAAK5B,EAAezF,KAChB,MACJ,KAAKyF,EAAe6B,YAChB,IAAIC,EAAU/I,EAAWyI,KACzB3G,EAAQd,MAAM0B,SAAQ,SAAC4F,GACfA,EAAKlI,WAAaL,EAAWgC,OACzBgH,IAAY/I,EAAW0I,MACvBJ,EAAK9H,SAAWR,EAAWyI,KAE3BH,EAAK9H,SAAWR,EAAW0I,MAE/BK,EAAUA,IAAY/I,EAAW0I,MAAQ1I,EAAWyI,KAAOzI,EAAW0I,OAEtEK,EAAU/I,EAAWyI,QAG7B,MACJ,KAAKxB,EAAe+B,gBAChBlH,EAAQd,MAAM0B,SAAQ,SAAC4F,EAAMC,GACrBD,EAAKlI,WAAaL,EAAWgC,QAEzBuG,EAAK9H,SADL+H,EAAQ,IAAM,EACEvI,EAAW0I,MAEX1I,EAAWyI,SAIvC,MACJ,KAAKxB,EAAe9D,OAChBrB,EAAQd,MAAM0B,SAAQ,SAAC4F,GACnB,GAAIA,EAAKlI,WAAaL,EAAWgC,MAAO,CACpC,IAAMkH,EAAcjH,EAAiBkH,oBAAoB,EAAG,GAC5DZ,EAAK9H,SAAWyI,EAChB,IAAME,EAA8BC,EAAyCtH,EACzE0B,EAAO6B,kCACP,SAACgE,GACG,OAAOA,EAAY7I,WAAaR,EAAW0I,SAE7CY,EAA6BF,EAAyCtH,EACxE0B,EAAO2B,iCACP,SAACkE,GACG,OAAOA,EAAY7I,WAAaR,EAAWyI,QAE7CU,GAA+BG,IACjChB,EAAK9H,SAAWyI,IAA8BjJ,EAAW0I,MAAQ1I,EAAWyI,KAAMzI,EAAW0I,WAOjH,OAAO5G,GAGL4F,EAAsB,SAAC5F,EAAkB0B,GAQ3C,GAPAA,EAAOgC,0BAA0B9C,SAAQ,SAAC6G,GACtC,IAAMjB,EAAOxG,EAAQd,MAAMwI,EAAwBD,IAC/CjB,EAAKlI,WAAaL,EAAWgC,QAC7BuG,EAAK5H,OAASZ,EAAS6I,aAIA,IAA3BnF,EAAOqB,gBACP,OAAO/C,EAGX,IAAI2H,EAAQjG,EAAOqB,gBAAkBrB,EAAOgC,0BAA0B3D,OAClE6H,EAAkB5H,EAAQd,MAAMiF,QAAO,SAACqC,GACxC,OAAOA,EAAKlI,WAAaL,EAAWgC,SASxC,OANA0H,EAAQA,EAAQC,EAAgB7H,OAAS6H,EAAgB7H,OAAS4H,EAE9DjG,EAAOoB,wBACP+E,EAAsB7H,EAAS0B,EAAO,KAAM1D,EAAS6I,SAAU,KAAMiB,EAAwBH,GAG1F3H,GAGL+H,EAAqB,SAAC/H,EAAkB0B,GAC1C,IAAIpB,EAASN,EAAQd,MAAM8I,MAAK,SAACxB,GAC7B,OAAOA,EAAKlI,WAAaL,EAAWyB,QAGxC,IAAKY,EACD,MAAMf,MAAM,uCAEhB,OAAOe,GAGLwH,EAAyB,SAAC9H,EAAkB0B,GAG9C,IAFA,IAAMuG,EAAuB,GAEvBA,EAAalI,OAASC,EAAQd,MAAMa,QAAQ,CAC9C,IAAMoH,EAAcjH,EAAiBkH,oBAAoB,EAAGpH,EAAQd,MAAMa,OAAO,GAC3EyG,EAAOxG,EAAQd,MAAMiI,GAE3B,IAAIc,EAAa5D,SAASmC,GAI1B,GAAIA,EAAKlI,WAAaL,EAAWM,MAAQiI,EAAKlI,WAAaL,EAAW6I,MAAQN,EAAKlI,WAAaL,EAAWyB,MAAQ8G,EAAK5H,SAAWZ,EAAS6I,SAA5I,CAWA,GAFAL,EAAK5H,OAASZ,EAAS6I,SAElBS,EAAyCtH,EAAS0B,EAAOwB,uBANvC,SAACsD,GACpB,OAAOA,EAAK5H,SAAWZ,EAAS6I,YAShC,OAAOL,EAHPA,EAAK5H,OAASZ,EAASa,YACvBoJ,EAAaxI,KAAK+G,QAZlByB,EAAaxI,KAAK+G,GAkB1B,MAAMjH,MAAM,qDAGV2I,EAA+B,SAAC1B,GAClC,OAAOA,EAAK1H,cAGV0G,EAAkB,SAAC9D,GAErB,IAAMC,EAAsB,GAC5B,IAAKH,EAAiBC,cAAcC,EAAQC,GACxC,OAAOA,EAGX,IAAM3B,EAAU,IAAIhB,EAAQ0C,EAAOzC,aAEnCkJ,EAAgCnI,EAAS/B,EAAWgC,MAAOyB,EAAO8B,0BAClE2E,EAAgCnI,EAAS/B,EAAW6I,KAAMpF,EAAO+B,yBACjE0E,EAAgCnI,EAAS/B,EAAWM,KAAMmD,EAAOiC,yBAEjE,IAAIgE,EAAQ,EA8EZ,OA7EIjG,EAAOW,wBACPsF,EAAQjG,EAAOY,eAAiBZ,EAAO8B,yBAAyBzD,OAChE8H,EAAsB7H,EAAS0B,EAAQzD,EAAWgC,MAAO,KAAM,KAAM8H,EAAoBJ,IAEzFjG,EAAOc,uBACPmF,EAAQjG,EAAOe,cAAgBf,EAAO+B,wBAAwB1D,OAC9D8H,EAAsB7H,EAAS0B,EAAQzD,EAAW6I,KAAM,KAAM,KAAMiB,EAAoBJ,IAExFjG,EAAOiB,uBACPgF,EAAQjG,EAAOkB,cAAgBlB,EAAOiC,wBAAwB5D,OAC9D8H,EAAsB7H,EAAS0B,EAAQzD,EAAWM,KAAM,KAAM,KAAMwJ,EAAoBJ,IAI5FzH,EAAiBkI,aAAmBpI,EAAQd,MAAOgJ,GAG5BlI,EAAQd,MAAMiF,QAAO,SAACqC,GACzC,OAAOA,EAAKlI,WAAaL,EAAWyB,QAGzBkB,SAAQ,SAAC4F,GAIpB,IAHA,IAAM6B,EAA+B,GACjCC,GAAsB,EAFG,aAKzB,GAA8B,IAA1BD,EAAetI,OACf,MAAM,IAAIR,MAAM,+CAGpB,IAAM4H,EAAcjH,EAAiBkH,oBAAoB,EAAG,GACtD9I,EAA2B,IAAhB6I,EAAoBlJ,EAAWgC,MAAwB,IAAhBkH,EAAoBlJ,EAAW6I,KAAO7I,EAAWM,KACzG,IAAK8J,EAAehE,SAAS/F,GAAW,CACpCkI,EAAKlI,SAAWA,EAEhB,IAAIiK,EAAgB,EACpB,OAAQjK,GACJ,KAAKL,EAAWgC,MACZ,GAAIyB,EAAOW,sBAGP,OAFAmE,EAAKlI,SAAWL,EAAWyB,KAC3B2I,EAAe5I,KAAKnB,GACpB,WAEJiK,EAAgB7G,EAAOsB,qBACvB,MACJ,KAAK/E,EAAW6I,KACZ,GAAIpF,EAAOc,qBAGP,OAFAgE,EAAKlI,SAAWL,EAAWyB,KAC3B2I,EAAe5I,KAAKnB,GACpB,WAEJiK,EAAgB7G,EAAOuB,oBACvB,MACJ,KAAKhF,EAAWM,KACZ,GAAImD,EAAOiB,qBAGP,OAFA6D,EAAKlI,SAAWL,EAAWyB,KAC3B2I,EAAe5I,KAAKnB,GACpB,WAEJiK,EAAgB7G,EAAOyB,oBAQ1BmE,EAAyCtH,EAASuI,GAJ5B,SAAC/B,GACxB,OAAOA,EAAKlI,WAAaA,KAOzBgK,GAAsB,GAHtB9B,EAAKlI,SAAWL,EAAWyB,KAC3B2I,EAAe5I,KAAKnB,OA5CxBgK,GAAqB,OAoD1BtI,GAGLmI,EAAkC,SAACnI,EAAkB1B,EAAsBkK,GAC7EA,EAAe5H,SAAQ,SAAC6G,GACpB,IAAMhB,EAAQiB,EAAwBD,GAChCgB,EAAczI,EAAQd,MAAMuH,GAElCgC,EAAY3J,cAAe,EAC3B2J,EAAYnK,SAAWA,MAIzBuJ,EAAwB,SAAC7H,EACA0B,EACApD,EACAM,EACAF,EACAgK,EACAf,GAC3B,IAAK,IAAInI,EAAI,EAAGA,EAAImI,EAAOnI,IAAK,CAC5B,IAAMmJ,EAAeD,EAAgB1I,EAAS0B,GAC9CiH,EAAarK,SAAuB,MAAZA,EAAmBqK,EAAarK,SAAWA,EACnEqK,EAAa/J,OAAmB,MAAVA,EAAiB+J,EAAa/J,OAASA,EAC7D+J,EAAajK,SAAuB,MAAZA,EAAmBiK,EAAajK,SAAWA,IAIrEgJ,EAA0B,SAACD,GAC7B,OAAQA,GACJ,KAAKrJ,EAAewK,IAChB,OAAO,EACX,KAAKxK,EAAeyK,KAChB,OAAO,EACX,KAAKzK,EAAe0K,OAChB,OAAO,EACX,KAAK1K,EAAe2K,KAChB,OAAO,EACX,KAAK3K,EAAe4K,IAChB,OAAO,EACX,KAAK5K,EAAe6K,KAChB,OAAO,EACX,KAAK7K,EAAe8K,OAChB,OAAO,EACX,KAAK9K,EAAe+K,KAChB,OAAO,EACX,KAAK/K,EAAegL,MAChB,OAAO,EACX,KAAKhL,EAAeiL,OAChB,OAAO,EACX,KAAKjL,EAAekL,SAChB,OAAO,GACX,KAAKlL,EAAemL,OAChB,OAAO,GACX,KAAKnL,EAAeoL,KAChB,OAAO,GACX,KAAKpL,EAAeqL,MAChB,OAAO,GACX,KAAKrL,EAAesL,QAChB,OAAO,GACX,KAAKtL,EAAeuL,MAChB,OAAO,KAIbrC,EAA2C,SAACtH,EAAkBuI,EAAuBqB,GACvF,IAAIC,EAAmB,EACnBC,GAAkC,EAYtC,OAXA9J,EAAQd,MAAM0B,SAAQ,SAAC4F,GACfoD,EAAcpD,GACdqD,GAAoB,EAEpBA,EAAmB,EAGnBA,EAAmBtB,IACnBuB,GAAkC,MAGnCA,GAGI1E,IClSA2E,EA9CX,WAAYzE,GAmBsD,IAlBtDrC,EAkBqD,uDAlBvB,GAC9BC,EAiBqD,uDAjBrB,GAChCF,EAgBqD,uDAhBtB,GAC/BG,EAeqD,uDAfvB,GAC9BE,EAcqD,uDAdX,GAC1CE,EAaqD,uDAbV,GAC3Cd,EAYqD,uDAZ7B,EACxBH,EAWqD,uDAX5B,EACzBS,EAUqD,uDAV3B,EAC1BH,EASqD,0DAT7B,EACxBJ,EAQqD,2DAPrDH,EAOqD,2DANrDS,EAMqD,2DALrDH,EAKqD,2DAJrDc,EAIqD,0DAJT,GAC5CD,EAGqD,0DAHR,GAC7CE,EAEqD,0DAFP,GAC9CC,EACqD,0DADT,GAC5CoD,EAAqD,0DAArB5B,EAAezF,KAAM,yBA/CjEuD,yBA+CiE,OA9CjEC,2BA8CiE,OA7CjEF,0BA6CiE,OA5CjEG,yBA4CiE,OA3CjEE,qCA2CiE,OA1CjEE,sCA0CiE,OAxCjEd,mBAwCiE,OAvCjEH,oBAuCiE,OAtCjES,qBAsCiE,OArCjEH,mBAqCiE,OAnCjEJ,0BAmCiE,OAlCjEH,2BAkCiE,OAjCjES,4BAiCiE,OAhCjEH,0BAgCiE,OA9BjEc,6BA8BiE,OA7BjED,8BA6BiE,OA5BjEE,+BA4BiE,OA3BjEC,6BA2BiE,OAzBjEoD,mBAyBiE,OAvBjE9H,iBAuBiE,OArBjEqG,YAqBiE,EAE7DvG,KAAKuG,OAASA,EACdvG,KAAKkE,oBAAsBA,EAC3BlE,KAAKmE,sBAAwBA,EAC7BnE,KAAKiE,qBAAuBA,EAC5BjE,KAAKoE,oBAAsBA,EAC3BpE,KAAKsE,gCAAkCA,EACvCtE,KAAKwE,iCAAmCA,EACxCxE,KAAK0D,cAAgBA,EACrB1D,KAAKuD,eAAiBA,EACtBvD,KAAKgE,gBAAkBA,EACvBhE,KAAK6D,cAAgBA,EACrB7D,KAAKyD,qBAAuBA,EAC5BzD,KAAKsD,sBAAwBA,EAC7BtD,KAAK+D,uBAAyBA,EAC9B/D,KAAK4D,qBAAuBA,EAC5B5D,KAAK0E,wBAA0BA,EAC/B1E,KAAKyE,yBAA2BA,EAChCzE,KAAK2E,0BAA4BA,EACjC3E,KAAK4E,wBAA0BA,EAC/B5E,KAAKgI,cAAgBA,EAErBhI,KAAKE,YAAcF,KAAKuG,OAAO0E,wBCtCxBC,E,WA3BX,WAAY/D,GAA+I,IAAhIC,EAA+H,uDAA/G,MAAOC,EAAwG,uDAArF,gBAAiBC,EAAoE,uDAAtD,IAAKtG,EAAiD,uDAAzB5B,EAAcM,UAAW,yBAP1JyH,WAO0J,OAN1JC,WAM0J,OAL1JC,cAK0J,OAJ1JC,SAI0J,OAH1JtG,YAG0J,EACtJhB,KAAKmH,MAAQA,EACbnH,KAAKoH,MAAQA,EACbpH,KAAKqH,SAAWA,EAChBrH,KAAKsH,IAAMA,EACXtH,KAAKgB,OAASA,E,mEAId,OAAQhB,KAAKgB,QACT,KAAK5B,EAAcM,UACf,OAAO,GACX,QACI,MAAMc,MAAM,8B,wDAKpB,OAAQR,KAAKgB,QACT,KAAK5B,EAAcM,UACf,MAAO,OACX,QACI,MAAMc,MAAM,gC,4ICVb,SAAS2K,GAAoBC,GAAkC,IAElEzI,EAAqDyI,EAArDzI,OAAQ0I,EAA6CD,EAA7CC,UAAWC,EAAkCF,EAAlCE,UAAWC,EAAuBH,EAAvBG,aAAcC,EAASJ,EAATI,KAwEhDnG,EAtEgC,SAACiG,EAAmBE,EAAc7I,GAClE,OAAQ2I,GACJ,IAAK,QACD,MAAgB,gBAATE,EAAyB7I,EAAOsB,qBAAqBwH,WAAa9I,EAAOY,eAAekI,WACnG,IAAK,OACD,MAAgB,gBAATD,EAAyB7I,EAAOuB,oBAAoBuH,WAAa9I,EAAOe,cAAc+H,WACjG,IAAK,QACD,MAAgB,gBAATD,EAAyB7I,EAAOyB,oBAAoBqH,WAAa9I,EAAOkB,cAAc4H,WACjG,IAAK,UACD,MAAgB,gBAATD,EAAyB7I,EAAOwB,sBAAsBsH,WAAa9I,EAAOqB,gBAAgByH,WACrG,IAAK,QACD,OAAO9I,EAAO6B,iCAAiCiH,WACnD,IAAK,OACD,OAAO9I,EAAO2B,gCAAgCmH,YAyD9CC,CAA4BJ,EAAWE,EAAM7I,GAErDgJ,GAAU,EACd,OAAQL,GACJ,IAAK,QACDK,EAAUhJ,EAAOW,sBACjB,MACJ,IAAK,OACDqI,EAAUhJ,EAAOc,qBACjB,MACJ,IAAK,UACDkI,EAAUhJ,EAAOoB,uBACjB,MACJ,IAAK,QACD4H,EAAUhJ,EAAOiB,qBAIzB,IA8BMgI,EA9BYC,cAAW,SAACC,GAAD,OACzBC,aAAa,CACTC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACLC,OAAQN,EAAMO,QAAQ,KAG9BC,YAAa,CACTF,OAAQN,EAAMO,QAAQ,GACtBE,SAAU,KAEdC,SAAU,CACND,SAAU,KAEdE,OAAQ,CACJR,QAAS,eACTG,OAAQ,QACRM,UAAW,cAEfvF,MAAO,CACHwF,SAAU,IAEdC,IAAK,CACDC,aAAc,QAIVC,GAEhB,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAWpB,EAAQY,UACrB,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaF,UAAWpB,EAAQU,aAC5B,kBAACa,EAAA,EAAD,CAAYC,GAAG,4BAAf,YACA,kBAACC,GAAA,EAAD,CACIC,QAAQ,2BACRF,GAAG,qBACH/H,MAAOiG,EACPiC,SAnFI,SAACC,GACrBjC,EAAaiC,EAAMC,OAAOpI,SAoFV,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,SAAjB,SACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,QAAjB,QACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,SAAjB,SACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,WAAjB,WACU,gBAATmG,GACD,kBAACkC,GAAA,EAAD,CAAUrI,MAAO,SAAjB,uBACU,gBAATmG,GACD,kBAACkC,GAAA,EAAD,CAAUrI,MAAO,QAAjB,uBAEM,gBAATmG,GACD,kBAACmC,GAAA,EAAD,CAAkBC,MAAM,SAASC,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASA,EAAS4B,SA3F7D,SAACC,GACpB,OAAQlC,GACJ,IAAK,QACD3I,EAAOW,sBAAwBkK,EAAMC,OAAO9B,QAC5C,MACJ,IAAK,OACDhJ,EAAOc,qBAAuB+J,EAAMC,OAAO9B,QAC3C,MACJ,IAAK,UACDhJ,EAAOoB,uBAAyByJ,EAAMC,OAAO9B,QAC7C,MACJ,IAAK,QACDhJ,EAAOiB,qBAAuB4J,EAAMC,OAAO9B,QAInD,IAAIoC,EAAS,2BAAOpL,GAAP,IAAe4D,OAAQ5D,EAAO4D,SAC3C8E,EAAU0C,IA0EgGC,KAAK,cAEvG,kBAACd,EAAA,EAAD,CAAae,UAAU,YACT,gBAATzC,GACD,kBAAC0C,GAAA,EAAD,CAAWD,UAAU,UAArB,8CACU,gBAATzC,GACG,kBAAC0C,GAAA,EAAD,CAAWD,UAAU,UAArB,gCACJ,kBAACE,GAAA,EAAD,CAAYC,aAAW,SAASJ,KAAK,UAAU3I,MAAOA,EAAOkI,SA5G5D,SAACC,IAvBkB,SAACnI,EAAeiG,EAAmBE,EAAc7I,GACjF,OAAQ2I,GACJ,IAAK,QACQ,gBAATE,EAAyB7I,EAAOsB,qBAAuBoB,EAAQ1C,EAAOY,eAAiB8B,EACvF,MACJ,IAAK,OACQ,gBAATmG,EAAyB7I,EAAOuB,oBAAsBmB,EAAQ1C,EAAOe,cAAgB2B,EACrF,MACJ,IAAK,QACQ,gBAATmG,EAAyB7I,EAAOyB,oBAAsBiB,EAAQ1C,EAAOkB,cAAgBwB,EACrF,MACJ,IAAK,UACQ,gBAATmG,EAAyB7I,EAAOwB,sBAAwBkB,EAAQ1C,EAAOqB,gBAAkBqB,EACzF,MACJ,IAAK,QACD1C,EAAO6B,iCAAmCa,EAC1C,MACJ,IAAK,OACD1C,EAAO2B,gCAAkCe,GAMjDgJ,CAA4BC,SAASd,EAAMC,OAAOpI,OAAQiG,EAAWE,EAAM7I,GAC3E,IAAIoL,EAAS,2BAAOpL,GAAP,IAAe4D,OAAQ5D,EAAO4D,SAC3C8E,EAAU0C,KA0GM,kBAACQ,GAAA,EAAD,KACc,gBAAT/C,GACD,kBAACmC,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,OAEzD,kBAACW,GAAA,EAAD,KACI,kBAACZ,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,OAEzD,kBAACW,GAAA,EAAD,KACI,kBAACZ,GAAA,EAAD,CAAkBtI,MAAM,IAAIwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,MACrD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,KAAKwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,OACtD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,KAAKwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,OACtD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,KAAKwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,QAE1D,kBAACW,GAAA,EAAD,KACI,kBAACZ,GAAA,EAAD,CAAkBtI,MAAM,KAAKwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,OACtD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,KAAKwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,OACtD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,KAAKwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,OACtD,kBAACD,GAAA,EAAD,CAAkBtI,MAAM,KAAKwI,QAAS,kBAACW,GAAA,EAAD,MAAUZ,MAAM,Y,kHCjLnE,SAASa,GAAerD,GAA6B,IAExDE,EAA+CF,EAA/CE,UAAWC,EAAoCH,EAApCG,aAAc5I,EAAsByI,EAAtBzI,OAAQ0I,EAAcD,EAAdC,UAEnCK,EAA8B,SAACJ,EAAmBoD,EAAkC/L,GACtF,OAAQ2I,GACJ,IAAK,QACD,OAA8F,MAAvF3I,EAAO8B,yBAAyBwE,MAAK,SAACnH,GAAW,OAAOA,IAAS4M,KAC5E,IAAK,OACD,OAA6F,MAAtF/L,EAAO+B,wBAAwBuE,MAAK,SAACnH,GAAW,OAAOA,IAAS4M,KAC3E,IAAK,QACD,OAA6F,MAAtF/L,EAAOiC,wBAAwBqE,MAAK,SAACnH,GAAW,OAAOA,IAAS4M,KAC3E,IAAK,UACD,OAA+F,MAAxF/L,EAAOgC,0BAA0BsE,MAAK,SAACnH,GAAW,OAAOA,IAAS4M,KAEjF,OAAO,GAwEL9C,EA9BYC,cAAW,SAACC,GAAD,OACzBC,aAAa,CACTC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACLC,OAAQN,EAAMO,QAAQ,KAG9BC,YAAa,CACTF,OAAQN,EAAMO,QAAQ,GACtBE,SAAU,KAEdC,SAAU,CACND,SAAU,KAEdE,OAAQ,CACJR,QAAS,eACTG,OAAQ,QACRM,UAAW,cAEfvF,MAAO,CACHwF,SAAU,IAEdC,IAAK,CACDC,aAAc,QAIVC,GAMV6B,EAAe,SAACnB,GAClB,IAAMoB,EAAgCN,SAASjP,EAAemO,EAAMC,OAAOO,OACvER,EAAMC,OAAO9B,QA7Ee,SAACtG,EAAuBiG,EAAmB3I,GAC3E,OAAQ2I,GACJ,IAAK,QACI3I,EAAO8B,yBAAyBa,SAASD,IAAU1C,EAAO8B,yBAAyB/D,KAAK2E,GAC7F,MACJ,IAAK,OACI1C,EAAO+B,wBAAwBY,SAASD,IAAU1C,EAAO+B,wBAAwBhE,KAAK2E,GAC3F,MACJ,IAAK,QACI1C,EAAOiC,wBAAwBU,SAASD,IAAU1C,EAAOiC,wBAAwBlE,KAAK2E,GAC3F,MACJ,IAAK,UACI1C,EAAOgC,0BAA0BW,SAASD,IAAU1C,EAAOgC,0BAA0BjE,KAAK2E,IAkEnGwJ,CAA4BD,EAAetD,EAAW3I,GA7DvB,SAAC0C,EAAuBiG,EAAmB3I,GAC9E,IAAI+E,EAAQ,EACZ,OAAQ4D,GACJ,IAAK,QACD5D,EAAQ/E,EAAO8B,yBAAyBqK,WAAU,SAAChN,GAAW,OAAOA,IAASuD,KAC9E1C,EAAO8B,yBAAyBsK,OAAOrH,EAAO,GAC9C,MACJ,IAAK,OACDA,EAAQ/E,EAAO+B,wBAAwBoK,WAAU,SAAChN,GAAW,OAAOA,IAASuD,KAC7E1C,EAAO+B,wBAAwBqK,OAAOrH,EAAO,GAC7C,MACJ,IAAK,QACDA,EAAQ/E,EAAOiC,wBAAwBkK,WAAU,SAAChN,GAAW,OAAOA,IAASuD,KAC7E1C,EAAOiC,wBAAwBmK,OAAOrH,EAAO,GAC7C,MACJ,IAAK,UACDA,EAAQ/E,EAAOgC,0BAA0BmK,WAAU,SAAChN,GAAW,OAAOA,IAASuD,KAC/E1C,EAAOgC,0BAA0BoK,OAAOrH,EAAO,IA8CnDsH,CAA+BJ,EAAetD,EAAW3I,GAG7D,IAAIoL,EAAS,2BAAOpL,GAAP,IAAe4D,OAAQ5D,EAAO4D,SAC3C8E,EAAU0C,IAGd,OACI,kBAAChB,EAAA,EAAD,CAAMC,UAAWpB,EAAQY,UACrB,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaF,UAAWpB,EAAQU,aAC5B,kBAACa,EAAA,EAAD,CAAYC,GAAG,4BAAf,YACA,kBAACC,GAAA,EAAD,CACIC,QAAQ,2BACRF,GAAG,qBACH/H,MAAOiG,EACPiC,SAzBI,SAACC,GACrBjC,EAAaiC,EAAMC,OAAOpI,SA2BV,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,SAAjB,SACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,QAAjB,QACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,SAAjB,SACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,WAAjB,aAGR,kBAAC6H,EAAA,EAAD,CAAae,UAAU,YACnB,kBAACC,GAAA,EAAD,CAAWD,UAAU,WACrB,kBAACgB,GAAA,EAAD,KACI,kBAACtB,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAewK,IAAKlH,GAAS4K,SAAUoB,EAAcX,KAAK,QAC3HJ,MAAM,MAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAeyK,KAAMnH,GAAS4K,SAAUoB,EAAcX,KAAK,SAC5HJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAe0K,OAAQpH,GAAS4K,SAAUoB,EAAcX,KAAK,WAC9HJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAe2K,KAAMrH,GAAS4K,SAAUoB,EAAcX,KAAK,SAC5HJ,MAAM,QAGd,kBAACsB,GAAA,EAAD,gBAEJ,kBAAChC,EAAA,EAAD,CAAae,UAAU,YACnB,kBAACC,GAAA,EAAD,CAAWD,UAAU,WACrB,kBAACgB,GAAA,EAAD,KACI,kBAACtB,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAe4K,IAAKtH,GAAS4K,SAAUoB,EAAcX,KAAK,QAC3HJ,MAAM,MAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAe6K,KAAMvH,GAAS4K,SAAUoB,EAAcX,KAAK,SAC5HJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAe8K,OAAQxH,GAAS4K,SAAUoB,EAAcX,KAAK,WAC9HJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAe+K,KAAMzH,GAAS4K,SAAUoB,EAAcX,KAAK,SAC5HJ,MAAM,QAGd,kBAACsB,GAAA,EAAD,gBAEJ,kBAAChC,EAAA,EAAD,CAAae,UAAU,YACnB,kBAACC,GAAA,EAAD,CAAWD,UAAU,WACrB,kBAACgB,GAAA,EAAD,KACI,kBAACtB,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAegL,MAAO1H,GAAS4K,SAAUoB,EAAcX,KAAK,UAC7HJ,MAAM,MAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAeiL,OAAQ3H,GAAS4K,SAAUoB,EAAcX,KAAK,WAC9HJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAekL,SAAU5H,GAAS4K,SAAUoB,EAAcX,KAAK,aAChIJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAemL,OAAQ7H,GAAS4K,SAAUoB,EAAcX,KAAK,WAC9HJ,MAAM,QAGd,kBAACsB,GAAA,EAAD,gBAEJ,kBAAChC,EAAA,EAAD,CAAae,UAAU,YACnB,kBAACC,GAAA,EAAD,CAAWD,UAAU,WACrB,kBAACgB,GAAA,EAAD,KACI,kBAACtB,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAeoL,KAAM9H,GAAS4K,SAAUoB,EAAcX,KAAK,SAC5HJ,MAAM,MAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAeqL,MAAO/H,GAAS4K,SAAUoB,EAAcX,KAAK,UAC7HJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAesL,QAAShI,GAAS4K,SAAUoB,EAAcX,KAAK,YAC/HJ,MAAM,OAEV,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASD,EAA4BJ,EAAWjM,EAAeuL,MAAOjI,GAAS4K,SAAUoB,EAAcX,KAAK,UAC7HJ,MAAM,QAGd,kBAACsB,GAAA,EAAD,kB,ICzMLC,G,WAxBX,WAAaC,EAAuBC,GAAsB,yBAL1DD,aAKyD,OAJzDC,YAIyD,OAHzDC,YAGyD,OAFzDC,UAEyD,EACrDvP,KAAKoP,QAAUA,EACfpP,KAAKqP,OAASA,EACdrP,KAAKsP,OAAStP,KAAKoP,QAAQI,qBAC3BxP,KAAKuP,KAAOH,EAAQK,a,oDAIpBzP,KAAKsP,OAAStP,KAAKoP,QAAQI,qBAC3BxP,KAAKsP,OAAOD,OAASrP,KAAKqP,OAC1BrP,KAAKsP,OAAOI,QAAQ1P,KAAKuP,MACzBvP,KAAKuP,KAAKG,QAAQ1P,KAAKoP,QAAQO,e,8BAI3BC,EAAcL,GAClBvP,KAAK6P,QACL7P,KAAKuP,KAAKA,KAAKO,eAAeP,EAAMK,GACpC5P,KAAKsP,OAAOS,MAAMH,GAClB5P,KAAKuP,KAAKA,KAAKO,eAAe,EAAGF,EAAO,Q,KCqVjCI,OA3Uf,WAAgB,IAAD,EACiCC,mBAAqB,CAAC,IAAIrP,EAAJ,2HAAyI,IAAK,IAAIA,EAAJ,uHAAqI,MAD1U,mBACJsP,EADI,KACYC,EADZ,OAEmCF,qBAFnC,mBAEJG,EAFI,KAEaC,EAFb,OAGyCJ,mBAAS,GAHlD,mBAGJK,EAHI,KAGgBC,EAHhB,OAIiBN,mBAAmC,IAAIjF,EAAyB,IAAIE,EAAJ,2BAA+BoF,MAJhH,mBAIJ3N,EAJI,KAII0I,EAJJ,OAMqB4E,mBAAS,GAN9B,mBAMJO,EANI,KAMMC,EANN,OAQqDR,mBAAS,QAR9D,mBAQJS,EARI,KAQsBC,EARtB,OASyCV,mBAAS,QATlD,mBASJW,EATI,KASgBC,EAThB,OAUmEZ,mBAAS,QAV5E,mBAUJa,EAVI,KAU6BC,EAV7B,OAY2Bd,mBAAS,gCAZpC,mBAYJe,EAZI,KAYSC,GAZT,QAauBhB,mBAAmB,IAb1C,qBAaJrN,GAbI,MAaOsO,GAbP,SAcmCjB,oBAAS,GAd5C,qBAcJkB,GAdI,MAcaC,GAdb,MAiBLC,GAAY,SAACC,GAEf,IACMC,EADsB,GAAGD,EAASvQ,IACU,EAE5CyQ,EAAe,IAAIC,aAQnBC,EAAe,SAACC,EAASvC,EAAawC,GACxC,IAAMC,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAOJ,GAAK,GACzBE,EAAQG,aAAe,cACvBH,EAAQI,OAAS,WACb7C,EAAQ8C,gBAAgBL,EAAQM,UAAU,SAAC9C,GACvCuC,EAASvC,OAGjBwC,EAAQO,iBAAkB,EAC1BP,EAAQQ,QAGNC,GAEE,IAFWhB,EAASxQ,SAAS,GAAGX,MAAM2O,WAAU,SAACrH,GACrD,OAAOA,EAAK5H,SAAWZ,EAAS6I,YAGpC4J,EAAa,YAAaF,GAAc,SAACnC,GACrC,IAAMnO,EAAQ,IAAIiO,GAAaqC,EAAcnC,GAG7CqC,EAAa,YAAaF,GAAc,SAACnC,GACrC,IAAMkD,EAAQ,IAAIpD,GAAaqC,EAAcnC,GAE7CqC,EAAa,YAAaF,GAAc,SAACnC,GACrC,IAAMtH,EAAO,IAAIoH,GAAaqC,EAAcnC,GAE5B,MAAZiC,GACAA,EAASxQ,SAAS,GAAGX,MAAM0B,SAAQ,SAAC4F,EAAMC,GACtC,GAAID,EAAKlI,WAAaL,EAAWgC,MAAO,CACpC,IAAMsR,EAAgBF,EAAa,GAAM,EACnC/C,EAAO9H,EAAK5H,SAAWZ,EAAS6I,SAAW,EAAI0K,EACrDtR,EAAMuR,QAAQjB,EAAakB,YAAcnB,EAAwB7J,EAAO6H,QACjE9H,EAAKlI,WAAaL,EAAW6I,MACpCA,EAAK0K,QAAQjB,EAAakB,YAAcnB,EAAwB7J,EAAO,GAGvEA,EAAQ,GAAK,GAAKyJ,IAClBoB,EAAME,QAAQjB,EAAakB,YAAcnB,EAAwB7J,EAAO,gBAUpGiL,qBAAU,WACNhQ,EAAO4D,OAAOY,MAAQ6J,EACtB,IAAIjD,EAAS,2BAAOpL,GAAP,IAAe4D,OAAQ5D,EAAO4D,SAC3C8E,EAAU0C,KACX,CAACiD,IAEJ2B,qBAAU,WACN,IAAMC,EAAyB,GAC/BnQ,EAAiBC,cAAcC,EAAQiQ,GACvC1B,GAAa0B,KACd,CAACjQ,IAEJ,IAmEMiJ,GAjCYC,cAAW,SAACC,GAAD,OACzBC,aAAa,CACTC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACLC,OAAQN,EAAMO,QAAQ,KAG9BC,YAAa,CACTF,OAAQN,EAAMO,QAAQ,GACtBE,SAAU,KAEdC,SAAU,CACND,SAAU,KAEdE,OAAQ,CACJR,QAAS,eACTG,OAAQ,QACRM,UAAW,cAEfvF,MAAO,CACHwF,SAAU,IAEdC,IAAK,CACDC,aAAc,IAElBgG,QAAS,CACLlG,SAAU,QAING,GAQhB,SAASgG,GAAS1H,GAAuB,IAC9B2H,EAAoC3H,EAApC2H,SAAU1N,EAA0B+F,EAA1B/F,MAAOqC,EAAmB0D,EAAnB1D,MAAUsL,EADE,YACO5H,EADP,8BAGpC,OACI,uCACI6H,KAAK,WACLC,OAAQ7N,IAAUqC,EAClB0F,GAAE,0BAAqB1F,GACvByL,kBAAA,qBAA+BzL,IAC3BsL,GAEH3N,IAAUqC,GACP,kBAAC0L,GAAA,EAAD,CAAKC,EAAG,GACJ,kBAACC,GAAA,EAAD,KAAaP,KAOjC,SAASQ,GAAU7L,GACf,MAAO,CACH0F,GAAG,cAAD,OAAgB1F,GAClB,gBAAgB,mBAAhB,OAAoCA,IAqB5C,OACI,yBAAKsF,UAAU,OACX,iCAEA,yBAAKA,UAAU,cAAf,qCACA,kBAACD,EAAA,EAAD,CAAMC,UAAWpB,GAAQY,UACrB,kBAACS,EAAA,EAAD,KACKiD,EAAesD,KAAI,SAAClC,GAUjB,OACI,kBAACvE,EAAA,EAAD,CAAMC,UAAWpB,GAAQY,UACrB,kBAACS,EAAA,EAAD,KACI,6BACI,kBAAC,IAAD,CACIwG,YAAanC,EAASzQ,WACtB6S,aAAc,GACdC,eAAgB,CAACC,WAAY,UAC7BC,aAAc,CAACC,oBAAoB,KAEvC,kBAACC,GAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAC1BC,QApBD,WACnB,IAAMC,EAAuBjE,EAAekE,QAAQ9C,GAC9C+C,EAAkB,YAAOnE,GAC/BmE,EAAmBtF,OAAOoF,EAAsB,GAChDhE,EAAkBkE,KAeN,UAEA,kBAACN,GAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC1BC,QAhBH,WACjB7C,GAAUC,KAcE,gBAU3BlB,GACD,kBAACrD,EAAA,EAAD,CAAMC,UAAWpB,GAAQY,UACrB,kBAACS,EAAA,EAAD,KACI,kBAAC,IAAD,CACIwG,YAAarD,EAAgBvP,WAC7B6S,aAAc,GACdC,eAAgB,CAACC,WAAY,UAC7BC,aAAc,CAACC,oBAAoB,KAEvC,kBAACC,GAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC1BC,QAAS,WAAO7C,GAAUjB,KADlC,QAGA,kBAACkE,GAAA,EAAD,CAAWC,MAAO,CAAEC,WAAY,QAASnP,MAAO+K,EAAgBrP,IAAKwM,SAhEnE,SAACC,GACf,GAAI4C,EAAiB,CACjB,IAAIqE,EAAmB,2BAChBrE,GADgB,IAEnBrP,IAAKuN,SAASd,EAAMC,OAAOpI,OAC3BvE,SAAUsP,EAAgBtP,WAE9BuP,EAAmBoE,KAyD+ErH,GAAG,iBAAiBQ,MAAM,oBACpH,kBAACD,GAAA,EAAD,CACIE,QAAS,kBAACC,GAAA,EAAD,CAAQnC,QAASwF,GAAiB5D,SA9I3C,SAACC,GACjB4D,GAAmB5D,EAAMC,OAAO9B,UA6IkDqC,KAAK,WACvEJ,MAAM,gCAKlB,kBAAC8G,GAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,GAAA,EAAD,CAAMvP,MAAOmL,EAAUjD,SA7EX,SAACC,EAA8BqH,GACnDpE,EAAYoE,IA4E8CzG,aAAW,uBACzD,kBAAC0G,GAAA,EAAD,eAAKlH,MAAM,qCAAwC2F,GAAU,KAC7D,kBAACuB,GAAA,EAAD,eAAKlH,MAAM,wCAA2C2F,GAAU,KAChE,kBAACuB,GAAA,EAAD,eAAKlH,MAAM,oCAAuC2F,GAAU,KAC5D,kBAACuB,GAAA,EAAD,eAAKlH,MAAM,kBAAqB2F,GAAU,OAGlD,kBAACT,GAAD,CAAUzN,MAAOmL,EAAU9I,MAAO,GAC9B,kBAACyD,GAAD,CAAqBK,KAAM,cAAeF,UAAWoF,EAChCnF,aAAcoF,EAA6BhO,OAAQA,EAAQ0I,UAAWA,KAE/F,kBAACyH,GAAD,CAAUzN,MAAOmL,EAAU9I,MAAO,GAC9B,kBAACyD,GAAD,CAAqBK,KAAM,YAAaF,UAAWsF,EAC9BrF,aAAcsF,EAAuBlO,OAAQA,EAAQ0I,UAAWA,KAEzF,kBAACyH,GAAD,CAAUzN,MAAOmL,EAAU9I,MAAO,GAC9B,kBAAC+G,GAAD,CAAgBnD,UAAWwF,EACXvF,aAAcwF,EAAoCpO,OAAQA,EAC1D0I,UAAWA,KAE/B,kBAACyH,GAAD,CAAUzN,MAAOmL,EAAU9I,MAAO,GAC9B,kBAACqF,EAAA,EAAD,CAAMC,UAAWpB,GAAQY,UACrB,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaF,UAAWpB,GAAQU,aAC5B,kBAACa,EAAA,EAAD,CAAYC,GAAG,4BAAf,oBACA,kBAACC,GAAA,EAAD,CACIC,QAAQ,2BACRF,GAAG,qBACH/H,MAAOe,EAAezD,EAAOqF,eAC7BuF,SA5LI,SAACC,GAC7B7K,EAAOqF,cAAgBsG,SAASlI,EAAeoH,EAAMC,OAAOpI,QAC5D,IAAI0I,EAAS,2BAAOpL,GAAP,IAAe4D,OAAQ5D,EAAO4D,SAC3C8E,EAAU0C,KA2Lc,kBAACL,GAAA,EAAD,CAAUrI,MAAO,QAAjB,QACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,mBAAjB,WACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,eAAjB,eACA,kBAACqI,GAAA,EAAD,CAAUrI,MAAO,UAAjB,eAMpB,kBAAC0H,EAAA,EAAD,CAAMC,UAAWpB,GAAQY,UACrB,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAae,UAAU,YACnB,kBAACC,GAAA,EAAD,CAAWD,UAAU,UAArB,uBACA,kBAACqG,GAAA,EAAD,CAAWjP,MAAO2L,EAAazD,SArMzB,SAACC,GACvByD,GAAezD,EAAMC,OAAOpI,QAoMgD+H,GAAG,iBACpDQ,MAAM,iBACjB,kBAACmH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAS7N,MAAO,0BAAMoN,MAAO,CAAE5H,SAAU,SAAU/J,KAC/C,0BAAM2R,MAAO,CAAEU,OAAQ,gBACvB,kBAAClB,GAAA,EAAD,CAAQmB,SAAUtS,GAAU5B,OAAS,EAAGgT,QAAQ,YACxCE,QA9NR,WACxB,IAAM5C,EAAWjL,EAAeC,sBAAsB3D,GACtD,GAAI+D,MAAMC,QAAQ2K,GACdJ,GAAaI,OADjB,CAII,IAAMtK,EAAcsK,EAAStK,YACvBlG,EAAWwQ,EAASxQ,SACpBqU,EAAc,IAAIvU,EAASoG,EAAalG,GAC9CuP,EAAmB8E,MAoNC,sBAIJ,kBAACpB,GAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAxO/C,WACb9D,IACAD,EAAkB,GAAD,mBAAKD,GAAL,CAAqBE,KACtCG,EAAsBD,EAAqB,MAqO3B,cC1VR8E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMnP,c","file":"static/js/main.68eba519.chunk.js","sourcesContent":["enum EAccents {\r\n    notAccented,\r\n    accented,\r\n}\r\nexport default EAccents;","enum ENoteTypes {\r\n    snare,\r\n    kick,\r\n    rest,\r\n    none\r\n}\r\n\r\nexport default ENoteTypes","enum EStickings {\r\n    None,\r\n    Right,\r\n    Left\r\n}\r\n\r\nexport default EStickings;","enum ENoteDuration {\r\n    none,\r\n    sixteenth,\r\n    eighth ,\r\n    dottedEighth,\r\n    quarter,\r\n    dottedQuarter,\r\n    half\r\n}\r\n\r\nexport default ENoteDuration;","enum ENotePlacement {\r\n    \r\n    one,\r\n    oneE,\r\n    oneAnd,\r\n    oneA,\r\n    two,\r\n    twoE,\r\n    twoAnd,\r\n    twoA,\r\n    three,\r\n    threeE,\r\n    threeAnd,\r\n    threeA,\r\n    four,\r\n    fourE,\r\n    fourAnd,\r\n    fourA\r\n}\r\n\r\nexport default ENotePlacement;","import EAccents from '../Enums/EAccents';\r\nimport ENoteTypes from '../Enums/ENoteTypes';\r\nimport EStickings from '../Enums/EStickings';\r\nimport ENoteDuration from '../Enums/ENoteDuration';\r\n\r\nclass Note {\r\n\r\n    sticking: EStickings;\r\n    accent: EAccents;\r\n    noteType: ENoteTypes;\r\n    duration: ENoteDuration;\r\n    placedByUser: boolean;\r\n\r\n    constructor(noteType = ENoteTypes.rest, duration: ENoteDuration = ENoteDuration.sixteenth, sticking: EStickings = EStickings.None, accent = EAccents.notAccented, placedByUser: boolean = false) {\r\n        this.noteType = noteType;\r\n        this.sticking = sticking;\r\n        this.accent = accent;\r\n        this.duration = duration;\r\n        this.placedByUser = placedByUser;\r\n    }\r\n}\r\n\r\nexport default Note;","import Note from './Note';\r\nimport ENoteTypes from \"../Enums/ENoteTypes\";\r\nimport ENoteDuration from \"../Enums/ENoteDuration\";\r\n\r\nclass Measure {\r\n    \r\n    notes: Note[];\r\n    \r\n    constructor(subdivision: number) {\r\n        this.notes = [];\r\n        let noteDuration = ENoteDuration.sixteenth;\r\n        \r\n        switch(subdivision) {\r\n            case 16:  \r\n                noteDuration = ENoteDuration.sixteenth;\r\n                break;\r\n            case 8:\r\n                noteDuration = ENoteDuration.eighth;\r\n                break;\r\n            case 4:\r\n                noteDuration = ENoteDuration.quarter;\r\n                break;\r\n            case 2:\r\n                noteDuration = ENoteDuration.half;\r\n                break;\r\n            default:\r\n                throw new Error('Unsupported subdivision');\r\n        }\r\n        \r\n        for (let i = 0; i < subdivision; i++) {\r\n            this.notes.push(new Note(ENoteTypes.none, noteDuration));\r\n        }\r\n    }\r\n}\r\n\r\nexport default Measure;","import Measure from \"./Measure\";\r\nimport ENoteTypes from \"../Enums/ENoteTypes\";\r\n\r\nclass Exercise {\r\n    \r\n    sheetMusic: string;\r\n    measures: Measure[];\r\n    bpm: number;\r\n    \r\n    constructor(sheetMusic: string, measures: Measure[], bpm: number = 120) {\r\n        this.sheetMusic = sheetMusic;\r\n        this.measures = measures;\r\n        this.bpm = bpm;\r\n        \r\n        if (!measures || measures.length === 0) {\r\n            const measure = new Measure(16);\r\n            for(let i = 0; i < 16; i++) {\r\n                measure.notes[i].noteType = ENoteTypes.snare;\r\n            }\r\n            measures.push(measure);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Exercise;","\r\nclass RandomizerEngine {\r\n    // Main entry point All configurations should be passed in here\r\n    public static getRandomCollectionWithConstraint<T>(items: Array<T>,\r\n                                                       constraints: (arraySoFar: Array<T>) => boolean,\r\n                                                       termination: (arraySoFar: Array<T>) => boolean) {\r\n        const result: T[] = [];\r\n        while (!termination(result)) {\r\n            let newItem = getRandomItemSelection(items);\r\n            if (constraints([...result, newItem])) {\r\n                result.push(newItem);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static addRandomPropertyToRandomCollection<T, G>(previousItems: T[], itemsToAdd: G[],\r\n                                                            constraints: (arraySoFar: T[]) => boolean,\r\n                                                            insertion: (previousItem: T, newItem: G) => T) {\r\n\r\n        const result: T[] = [];\r\n\r\n        previousItems.forEach((item) => {\r\n            let added = false;\r\n            while (!added) {\r\n                const randomItem = getRandomItemSelection(itemsToAdd);\r\n                const newItem = insertion(item, randomItem);\r\n                if (constraints([...result, newItem])) {\r\n                    result.push(newItem);\r\n                    added = true;\r\n                }\r\n            }\r\n\r\n        });\r\n        return result;\r\n    }\r\n\r\n    public static shuffleArray<T>(inputArray: T[], shouldIgnore: (item: T) => boolean): void {\r\n        for (let i = inputArray.length - 1; i > 0; i--) {\r\n            if (shouldIgnore(inputArray[i])) {\r\n                continue;\r\n            }\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            if (shouldIgnore(inputArray[j])) {\r\n                continue;\r\n            }\r\n            [inputArray[i], inputArray[j]] = [inputArray[j], inputArray[i]];\r\n        }\r\n    }\r\n    \r\n    public static randomNumberInRange (min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}\r\n\r\nconst getRandomItemSelection = (items: Array<any>) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n};\r\n\r\nexport default RandomizerEngine;","import GenerateSheetMusicConfig from \"../models/GenerateSheetMusicConfig\";\r\n\r\nclass ValidationEngine {\r\n\r\n    public static configIsValid = (config: GenerateSheetMusicConfig, errorList: string[]): boolean => {\r\n        const notePlacementsValid = ValidationEngine.notePlacementsAreValid(config, errorList);\r\n        const maxConsecutiveNotesValid: boolean = ValidationEngine.maxConsecutiveNotesAreValid(config, errorList);\r\n        const noteCountsValid: boolean = ValidationEngine.noteCountsAreValid(config, errorList);\r\n        const notePlacementsDoNotExceedCounts = ValidationEngine.notePlacementsDoNotExceedNoteCounts(config, errorList);\r\n\r\n        return notePlacementsValid && maxConsecutiveNotesValid && noteCountsValid && notePlacementsDoNotExceedCounts;\r\n\r\n    };\r\n\r\n    private static noteCountsAreValid = (config: GenerateSheetMusicConfig, errorList: string[]): boolean => {\r\n        // for the lifetime of this function:\r\n        // -1 means any amount of that note is allowed\r\n        // 0 means the note is disabled\r\n        // 1+ means there are exactly that many notes of the type\r\n        \r\n        const subdivision = config.subdivision;\r\n        let result = true;\r\n\r\n        const snares = config.snareNoteCountEnabled ? config.snareNoteCount : -1;\r\n        const kicks = config.kickNoteCountEnabled ? config.kickNoteCount : -1;\r\n        const rests = config.restNoteCountEnabled ? config.restNoteCount : -1;\r\n        const accents = config.accentNoteCountEnabled ? config.accentNoteCount : -1;\r\n\r\n        // all note counts are disabled, auto valid\r\n        if (snares === -1 && kicks === -1 && rests === -1 && accents === -1) {\r\n            result = true;\r\n        }\r\n\r\n        // nothing in enabled!\r\n        if (snares === 0 && rests === 0 && kicks === 0){\r\n            errorList.push('All Note Counts set to zero. ');\r\n            result = false;\r\n        }\r\n\r\n        // an option is too big\r\n        if (snares > subdivision || kicks > subdivision || accents > subdivision || rests > subdivision) {\r\n            errorList.push('One of your exact note counts is higher than your subdivision. ');\r\n            result = false\r\n        }\r\n\r\n        // // if you specify kicks and snares and rests, you have specified everything so it must equal the subdivision\r\n        if ((snares >= 0 && kicks >= 0 && rests >= 0) && (snares + kicks + rests !== subdivision)) {\r\n            errorList.push('You have all note types specified but they do not add up to your subdivision. ');\r\n            result = false;\r\n        }\r\n\r\n        // if you have accents specified, it can't exceed the available room for snares\r\n        if (accents > snares && snares !== -1) {\r\n            errorList.push('You have more accents specified than snares, not all notes can be accented. ');\r\n            result = false\r\n        }\r\n        \r\n        if (!(snares + kicks + rests <= subdivision)) {\r\n            errorList.push('You have more notes specified than allowed in a measure per the subdivision. ');\r\n            result = false\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    private static maxConsecutiveNotesAreValid = (config: GenerateSheetMusicConfig, errorList: string[]): boolean => {\r\n        const snares = config.maxConsecutiveSnares;\r\n        const kicks = config.maxConsecutiveKicks;\r\n        const accents = config.maxConsecutiveAccents;\r\n        const rests = config.maxConsecutiveRests;\r\n        const lefts = config.maxConsecutiveLeftHandStickings;\r\n        const rights = config.maxConsecutiveRightHandStickings;\r\n\r\n        // any max consecutive is fine, but you can't have 0. Use noteCount to turn off a note Type\r\n        if (snares === 0 || kicks === 0 || accents === 0 || rests === 0 || lefts === 0 || rights === 0) {\r\n            errorList.push('You cannot set maxConsecutive to 0. Use Note Count toggle to turn off a note type. ');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    private static notePlacementsAreValid = (config: GenerateSheetMusicConfig, errorList: string[]): boolean => {\r\n        const snares = config.mandatorySnarePlacements;\r\n        const kicks = config.mandatoryKickPlacements;\r\n        const accents = config.mandatoryAccentPlacements;\r\n        const rests = config.mandatoryRestPlacements;\r\n        \r\n        const subdivision = config.subdivision;\r\n        let result = true;\r\n\r\n        // nobody can have more than available notes\r\n        if (snares.length > subdivision || kicks.length > subdivision || accents.length > subdivision || rests.length > subdivision) {\r\n            errorList.push('One of your mandatory notes placed is bigger than your subdivision allows. ');\r\n            result = false\r\n        }\r\n\r\n        // kicks/snares/rests are mutually exclusive right now\r\n        // TODO: Refactor for non-linear patterns\r\n        if (snares.length + kicks.length + rests.length > subdivision) {\r\n            errorList.push('You have more mandatory notes placed than your subdivision allows. ');\r\n            result = false\r\n        }\r\n\r\n        // check for duplicates\r\n        const snareHasDuplicates = (new Set(snares)).size !== snares.length;\r\n        const kicksHasDuplicates = (new Set(kicks)).size !== kicks.length;\r\n        const accentsHasDuplicates = (new Set(accents)).size !== accents.length;\r\n        const restsHasDuplicates = (new Set(rests)).size !== rests.length;\r\n\r\n        if (snareHasDuplicates || kicksHasDuplicates || accentsHasDuplicates || restsHasDuplicates) {\r\n            errorList.push('One of your mandatory note placements has duplicates. ');\r\n            result = false\r\n        }\r\n\r\n        // can't have overlapping notes right now\r\n        const overlappingSnareAndKickNotes = snares.filter(value => kicks.includes(value));\r\n        const overlappingSnareAndRestNotes = snares.filter(value => rests.includes(value));\r\n        const overlappingKickAndSnareNotes = kicks.filter(value => snares.includes(value));\r\n        const overlappingKickAndRestNotes = kicks.filter(value => rests.includes(value));\r\n        const overlappingRestAndSnareNotes = rests.filter(value => snares.includes(value));\r\n        const overlappingRestAndKickNotes = rests.filter(value => kicks.includes(value));\r\n\r\n        if (!(overlappingSnareAndKickNotes.length === 0 &&\r\n            overlappingSnareAndRestNotes.length === 0 &&\r\n            overlappingKickAndSnareNotes.length === 0 &&\r\n            overlappingKickAndRestNotes.length === 0 &&\r\n            overlappingRestAndSnareNotes.length === 0 &&\r\n            overlappingRestAndKickNotes.length === 0)) {\r\n            \r\n            errorList.push('Two note types have the same placement. ');\r\n            result = false;\r\n        }\r\n        \r\n        return result;\r\n    };\r\n\r\n    private static notePlacementsDoNotExceedNoteCounts = (config: GenerateSheetMusicConfig, errorList: string[]) => {\r\n        const snarePlacements = config.mandatorySnarePlacements;\r\n        const kickPlacements = config.mandatoryKickPlacements;\r\n        const accentPlacements = config.mandatoryAccentPlacements;\r\n        const restPlacements = config.mandatoryRestPlacements;\r\n        const snares = config.snareNoteCount;\r\n        const kicks = config.kickNoteCount;\r\n        const rests = config.restNoteCount;\r\n        const accents = config.accentNoteCount;\r\n\r\n        const snaresValid = snarePlacements.length <= snares || !config.snareNoteCountEnabled;\r\n        const kicksValid = kickPlacements.length <= kicks || !config.kickNoteCountEnabled;\r\n        const accentsValid = accentPlacements.length <= accents || !config.accentNoteCountEnabled;\r\n        const restsValid = restPlacements.length <= rests || !config.restNoteCountEnabled;\r\n\r\n        if (!(snaresValid && kicksValid && restsValid && accentsValid)) {\r\n            errorList.push('If you have exact note count turned on, it must be higher than the number of exact placements you specify. ');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n}\r\n\r\nexport default ValidationEngine;","enum EStickingStyle {\r\n    none,\r\n    naturalSticking,\r\n    alternating,\r\n    random\r\n}\r\n\r\nexport default EStickingStyle;","import GenerateSheetMusicConfig from '../models/GenerateSheetMusicConfig';\r\nimport RandomizerEngine from './RandomizerEngine';\r\nimport Measure from '../models/Measure';\r\nimport ENoteTypes from \"../Enums/ENoteTypes\";\r\nimport ENotePlacement from \"../Enums/ENotePlacement\";\r\nimport ValidationEngine from \"./ValidationEngine\";\r\nimport Note from \"../models/Note\";\r\nimport Header from \"../models/Header\";\r\nimport EStickings from \"../Enums/EStickings\";\r\nimport EAccents from \"../Enums/EAccents\";\r\nimport EStickingStyle from \"../Enums/EStickingStyle\";\r\n\r\nclass ExerciseEngine {\r\n    // Main entry point All configurations should be passed in here\r\n    public static generateNewSheetMusic = (config: GenerateSheetMusicConfig) => {\r\n        try {\r\n            const header = generateHeaderString(config.header);\r\n            const measure = generateMeasure(config);\r\n            if (Array.isArray(measure)) {\r\n                return measure;\r\n            }\r\n            addStickingToMeasure(measure, config);\r\n            addAccentsToMeasure(measure, config);\r\n            const formattedResult = format(measure);\r\n            return {\r\n                abcjsString: `${header}${formattedResult}`,\r\n                measures: [measure]\r\n            }\r\n        } catch (e) {\r\n            return e.message;\r\n        }\r\n    };\r\n}\r\n\r\nconst generateHeaderString = (header: Header) => {\r\n    return `X:1\\nT:${header.title}\\nM:${header.meter}\\nC:${header.composer}\\nK:${header.key}\\nL:${header.translateLengthToFractionString()}\\n`\r\n};\r\n\r\nconst format = (measure: Measure) => {\r\n\r\n    let resultString = '';\r\n    // Add in the note groupings, add a space every 4 units\r\n    measure.notes.forEach((note, index) => {\r\n        let noteString = index % 4 === 0 ? ' ' : '';\r\n        if (note.sticking === EStickings.Left) {\r\n            noteString = noteString + `\"L\"`;\r\n        }\r\n        if (note.sticking === EStickings.Right) {\r\n            noteString = noteString + `\"R\"`;\r\n        }\r\n        if (note.accent === EAccents.accented) {\r\n            noteString = noteString + `!>!`;\r\n        }\r\n        if (note.noteType === ENoteTypes.snare) {\r\n            noteString = noteString + 'c';\r\n        }\r\n        if (note.noteType === ENoteTypes.kick) {\r\n            noteString = noteString + 'f,';\r\n        }\r\n        if (note.noteType === ENoteTypes.rest) {\r\n            noteString = noteString + 'z';\r\n        }\r\n        resultString += noteString;\r\n    });\r\n    return `|:${resultString}:|`\r\n};\r\n\r\nconst addStickingToMeasure = (measure: Measure, config: GenerateSheetMusicConfig): Measure => {\r\n    switch (config.stickingStyle) {\r\n        case EStickingStyle.none:\r\n            break;\r\n        case EStickingStyle.alternating:\r\n            let lastHit = EStickings.Left;\r\n            measure.notes.forEach((note) => {\r\n                if (note.noteType === ENoteTypes.snare) {\r\n                    if (lastHit === EStickings.Right) {\r\n                        note.sticking = EStickings.Left;\r\n                    } else {\r\n                        note.sticking = EStickings.Right;\r\n                    }\r\n                    lastHit = lastHit === EStickings.Right ? EStickings.Left : EStickings.Right;\r\n                } else {\r\n                    lastHit = EStickings.Left;\r\n                }\r\n            });\r\n            break;\r\n        case EStickingStyle.naturalSticking:\r\n            measure.notes.forEach((note, index) => {\r\n                if (note.noteType === ENoteTypes.snare) {\r\n                    if (index % 2 === 0) {\r\n                        note.sticking = EStickings.Right\r\n                    } else {\r\n                        note.sticking = EStickings.Left\r\n                    }\r\n                }\r\n            });\r\n            break;\r\n        case EStickingStyle.random:\r\n            measure.notes.forEach((note) => {\r\n                if (note.noteType === ENoteTypes.snare) {\r\n                    const randomIndex = RandomizerEngine.randomNumberInRange(1, 2);\r\n                    note.sticking = randomIndex as EStickings;\r\n                    const rightHandDoesNotExceedCount = noteVarietyDoesNotExceedConsecutiveCount(measure, \r\n                        config.maxConsecutiveRightHandStickings,\r\n                        (noteToCheck: Note) => {\r\n                            return noteToCheck.sticking === EStickings.Right\r\n                        });\r\n                    const leftHandDoesNotExceedCount = noteVarietyDoesNotExceedConsecutiveCount(measure, \r\n                        config.maxConsecutiveLeftHandStickings,\r\n                        (noteToCheck: Note) => {\r\n                            return noteToCheck.sticking === EStickings.Left\r\n                        });\r\n                    if (!(rightHandDoesNotExceedCount && leftHandDoesNotExceedCount)) {\r\n                        note.sticking = randomIndex as EStickings === EStickings.Right ? EStickings.Left: EStickings.Right;\r\n                    }\r\n                }\r\n            });\r\n\r\n            break;\r\n    }\r\n    return measure;\r\n};\r\n\r\nconst addAccentsToMeasure = (measure: Measure, config: GenerateSheetMusicConfig): Measure => {\r\n    config.mandatoryAccentPlacements.forEach((placement) => {\r\n        const note = measure.notes[mapNotePlacementToIndex(placement)];\r\n        if (note.noteType === ENoteTypes.snare){\r\n            note.accent = EAccents.accented;\r\n        }\r\n    });\r\n\r\n    if (config.accentNoteCount === 0) {\r\n        return measure;\r\n    }\r\n\r\n    let count = config.accentNoteCount - config.mandatoryAccentPlacements.length;\r\n    let availableSnares = measure.notes.filter((note) => {\r\n        return note.noteType === ENoteTypes.snare;\r\n    });\r\n    \r\n    count = count > availableSnares.length ? availableSnares.length : count;\r\n    \r\n    if (config.accentNoteCountEnabled) {\r\n        addNoteCountToMeasure(measure, config,null, EAccents.accented, null, randomValidUnsetAccent, count);\r\n    }\r\n    \r\n    return measure;\r\n};\r\n\r\nconst firstUnsetNoteType = (measure: Measure, config: GenerateSheetMusicConfig): Note => {\r\n    let result = measure.notes.find((note) => {\r\n        return note.noteType === ENoteTypes.none;\r\n    });\r\n    \r\n    if (!result) {\r\n        throw Error(\"No Unset Notes. Generation failure!\");\r\n    }\r\n    return result;\r\n};\r\n\r\nconst randomValidUnsetAccent = (measure: Measure, config: GenerateSheetMusicConfig): Note => {\r\n    const notesChecked: Note[] = [];\r\n    \r\n    while(notesChecked.length < measure.notes.length) {\r\n        const randomIndex = RandomizerEngine.randomNumberInRange(0, measure.notes.length-1);\r\n        const note = measure.notes[randomIndex];\r\n        \r\n        if (notesChecked.includes(note)) {\r\n            continue;\r\n        }\r\n        \r\n        if (note.noteType === ENoteTypes.rest || note.noteType === ENoteTypes.kick || note.noteType === ENoteTypes.none || note.accent === EAccents.accented) {\r\n            notesChecked.push(note);\r\n            continue;\r\n        }\r\n        \r\n        const isAccentedNote = (note: Note): boolean => {\r\n            return note.accent === EAccents.accented;\r\n        };\r\n        \r\n        note.accent = EAccents.accented;\r\n        \r\n        if (!noteVarietyDoesNotExceedConsecutiveCount(measure, config.maxConsecutiveAccents, isAccentedNote)) {\r\n            note.accent = EAccents.notAccented;\r\n            notesChecked.push(note);\r\n        } else {\r\n            return note;\r\n        }\r\n    }\r\n    \r\n    throw Error(\"No place to put your accent. Generation failure!\");\r\n};\r\n\r\nconst shouldIgnoreInShufflingNotes = (note: Note) => {\r\n    return note.placedByUser;\r\n};\r\n\r\nconst generateMeasure = (config: GenerateSheetMusicConfig): Measure | string[] => {\r\n\r\n    const errorList: string[] = [];\r\n    if (!ValidationEngine.configIsValid(config, errorList)) {\r\n        return errorList;\r\n    }\r\n\r\n    const measure = new Measure(config.subdivision);\r\n\r\n    addMandatoryNotesToEmptyMeasure(measure, ENoteTypes.snare, config.mandatorySnarePlacements);\r\n    addMandatoryNotesToEmptyMeasure(measure, ENoteTypes.kick, config.mandatoryKickPlacements);\r\n    addMandatoryNotesToEmptyMeasure(measure, ENoteTypes.rest, config.mandatoryRestPlacements);\r\n    \r\n    let count = 0;\r\n    if (config.snareNoteCountEnabled) {\r\n        count = config.snareNoteCount - config.mandatorySnarePlacements.length;\r\n        addNoteCountToMeasure(measure, config, ENoteTypes.snare, null, null, firstUnsetNoteType, count);\r\n    }\r\n    if (config.kickNoteCountEnabled) {\r\n        count = config.kickNoteCount - config.mandatoryKickPlacements.length;\r\n        addNoteCountToMeasure(measure, config, ENoteTypes.kick, null, null, firstUnsetNoteType, count);\r\n    }\r\n    if (config.restNoteCountEnabled) {\r\n        count = config.restNoteCount - config.mandatoryRestPlacements.length;\r\n        addNoteCountToMeasure(measure, config, ENoteTypes.rest, null, null, firstUnsetNoteType, count);\r\n    }\r\n\r\n    //shuffle\r\n    RandomizerEngine.shuffleArray<Note>(measure.notes, shouldIgnoreInShufflingNotes);\r\n\r\n    // fill in remaining notes\r\n    const remainingNotes = measure.notes.filter((note) => {\r\n        return note.noteType === ENoteTypes.none;\r\n    });\r\n\r\n    remainingNotes.forEach((note) => {\r\n        const optionsChecked: ENoteTypes[] = [];\r\n        let acceptableNoteFound = false;\r\n\r\n        while (!acceptableNoteFound) {\r\n            if (optionsChecked.length === 3) {\r\n                throw new Error(\"No where to place note. Generation failure!\");\r\n            }\r\n\r\n            const randomIndex = RandomizerEngine.randomNumberInRange(0, 2);\r\n            const noteType = randomIndex === 0 ? ENoteTypes.snare : randomIndex === 1 ? ENoteTypes.kick : ENoteTypes.rest;\r\n            if (!optionsChecked.includes(noteType)) {\r\n                note.noteType = noteType;\r\n\r\n                let maximumNumber = 0;\r\n                switch (noteType) {\r\n                    case ENoteTypes.snare:\r\n                        if (config.snareNoteCountEnabled) {\r\n                            note.noteType = ENoteTypes.none;\r\n                            optionsChecked.push(noteType);\r\n                            continue;\r\n                        }\r\n                        maximumNumber = config.maxConsecutiveSnares;\r\n                        break;\r\n                    case ENoteTypes.kick:\r\n                        if (config.kickNoteCountEnabled) {\r\n                            note.noteType = ENoteTypes.none;\r\n                            optionsChecked.push(noteType);\r\n                            continue;\r\n                        }\r\n                        maximumNumber = config.maxConsecutiveKicks;\r\n                        break;\r\n                    case ENoteTypes.rest:\r\n                        if (config.restNoteCountEnabled) {\r\n                            note.noteType = ENoteTypes.none;\r\n                            optionsChecked.push(noteType);\r\n                            continue;\r\n                        }\r\n                        maximumNumber = config.maxConsecutiveRests;\r\n                        break;\r\n                }\r\n                \r\n                const noteIsSameNoteType = (note: Note): boolean => {\r\n                    return note.noteType === noteType;\r\n                };\r\n\r\n                if (!noteVarietyDoesNotExceedConsecutiveCount(measure, maximumNumber, noteIsSameNoteType)) {\r\n                    note.noteType = ENoteTypes.none;\r\n                    optionsChecked.push(noteType);\r\n                } else {\r\n                    acceptableNoteFound = true;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return measure;\r\n};\r\n\r\nconst addMandatoryNotesToEmptyMeasure = (measure: Measure, noteType: ENoteTypes, mandatoryNotes: ENotePlacement[]) => {\r\n    mandatoryNotes.forEach((placement) => {\r\n        const index = mapNotePlacementToIndex(placement);\r\n        const noteAtIndex = measure.notes[index];\r\n\r\n        noteAtIndex.placedByUser = true;\r\n        noteAtIndex.noteType = noteType;\r\n    });\r\n};\r\n\r\nconst addNoteCountToMeasure = (measure: Measure,\r\n                               config: GenerateSheetMusicConfig,\r\n                               noteType: ENoteTypes | null, \r\n                               accent: EAccents | null,\r\n                               sticking: EStickings | null, \r\n                               getNoteToUpdate: (measure: Measure, config: GenerateSheetMusicConfig) => Note,\r\n                               count: number) => {\r\n    for (let i = 0; i < count; i++) {\r\n        const noteToUpdate = getNoteToUpdate(measure, config);\r\n        noteToUpdate.noteType = noteType == null ? noteToUpdate.noteType : noteType;\r\n        noteToUpdate.accent = accent == null ? noteToUpdate.accent : accent;\r\n        noteToUpdate.sticking = sticking == null ? noteToUpdate.sticking : sticking;\r\n    }\r\n};\r\n\r\nconst mapNotePlacementToIndex = (placement: ENotePlacement) => {\r\n    switch (placement) {\r\n        case ENotePlacement.one:\r\n            return 0;\r\n        case ENotePlacement.oneE:\r\n            return 1;\r\n        case ENotePlacement.oneAnd:\r\n            return 2;\r\n        case ENotePlacement.oneA:\r\n            return 3;\r\n        case ENotePlacement.two:\r\n            return 4;\r\n        case ENotePlacement.twoE:\r\n            return 5;\r\n        case ENotePlacement.twoAnd:\r\n            return 6;\r\n        case ENotePlacement.twoA:\r\n            return 7;\r\n        case ENotePlacement.three:\r\n            return 8;\r\n        case ENotePlacement.threeE:\r\n            return 9;\r\n        case ENotePlacement.threeAnd:\r\n            return 10;\r\n        case ENotePlacement.threeA:\r\n            return 11;\r\n        case ENotePlacement.four:\r\n            return 12;\r\n        case ENotePlacement.fourE:\r\n            return 13;\r\n        case ENotePlacement.fourAnd:\r\n            return 14;\r\n        case ENotePlacement.fourA:\r\n            return 15;\r\n    }\r\n};\r\n\r\nconst noteVarietyDoesNotExceedConsecutiveCount = (measure: Measure, maximumNumber: number, isNoteVariety: (note: Note) => boolean) => {\r\n    let consecutiveCount = 0;\r\n    let hasNotSurpassedConsecutiveCount = true;\r\n    measure.notes.forEach((note) => {\r\n        if (isNoteVariety(note)) {\r\n            consecutiveCount += 1;\r\n        } else {\r\n            consecutiveCount = 0;\r\n        }\r\n        \r\n        if (consecutiveCount > maximumNumber) {\r\n            hasNotSurpassedConsecutiveCount = false;\r\n        }\r\n    });\r\n    return hasNotSurpassedConsecutiveCount;\r\n};\r\n\r\nexport default ExerciseEngine;","import EStickingStyle from '../Enums/EStickingStyle';\r\nimport ENotePlacement from '../Enums/ENotePlacement';\r\nimport Header from \"./Header\";\r\n\r\nclass GenerateSheetMusicConfig {\r\n    \r\n    maxConsecutiveKicks: number;\r\n    maxConsecutiveAccents: number;\r\n    maxConsecutiveSnares: number;\r\n    maxConsecutiveRests: number;\r\n    maxConsecutiveLeftHandStickings: number;\r\n    maxConsecutiveRightHandStickings: number;\r\n    \r\n    kickNoteCount: number;\r\n    snareNoteCount: number;\r\n    accentNoteCount: number;\r\n    restNoteCount: number;\r\n    \r\n    kickNoteCountEnabled: boolean;\r\n    snareNoteCountEnabled: boolean;\r\n    accentNoteCountEnabled: boolean;\r\n    restNoteCountEnabled: boolean;\r\n    \r\n    mandatoryKickPlacements: ENotePlacement[];\r\n    mandatorySnarePlacements: ENotePlacement[];\r\n    mandatoryAccentPlacements: ENotePlacement[];\r\n    mandatoryRestPlacements: ENotePlacement[];\r\n    \r\n    stickingStyle: EStickingStyle;\r\n    \r\n    subdivision: number;\r\n    \r\n    header: Header;\r\n\r\n    constructor(header: Header,\r\n                maxConsecutiveKicks: number = 16,\r\n                maxConsecutiveAccents: number = 16,\r\n                maxConsecutiveSnares: number = 16,\r\n                maxConsecutiveRests: number = 16,\r\n                maxConsecutiveLeftHandStickings: number = 16,\r\n                maxConsecutiveRightHandStickings: number = 16,\r\n                kickNoteCount: number = 0,\r\n                snareNoteCount: number = 0,\r\n                accentNoteCount: number = 0,\r\n                restNoteCount: number = 0,\r\n                kickNoteCountEnabled: boolean = false,\r\n                snareNoteCountEnabled: boolean = false,\r\n                accentNoteCountEnabled: boolean = false,\r\n                restNoteCountEnabled: boolean = false,\r\n                mandatoryKickPlacements: ENotePlacement[] = [],\r\n                mandatorySnarePlacements: ENotePlacement[] = [],\r\n                mandatoryAccentPlacements: ENotePlacement[] = [],\r\n                mandatoryRestPlacements: ENotePlacement[] = [],\r\n                stickingStyle: EStickingStyle = EStickingStyle.none) {\r\n\r\n        this.header = header;\r\n        this.maxConsecutiveKicks = maxConsecutiveKicks;\r\n        this.maxConsecutiveAccents = maxConsecutiveAccents;\r\n        this.maxConsecutiveSnares = maxConsecutiveSnares;\r\n        this.maxConsecutiveRests = maxConsecutiveRests;\r\n        this.maxConsecutiveLeftHandStickings = maxConsecutiveLeftHandStickings;\r\n        this.maxConsecutiveRightHandStickings = maxConsecutiveRightHandStickings;\r\n        this.kickNoteCount = kickNoteCount;\r\n        this.snareNoteCount = snareNoteCount;\r\n        this.accentNoteCount = accentNoteCount;\r\n        this.restNoteCount = restNoteCount;\r\n        this.kickNoteCountEnabled = kickNoteCountEnabled;\r\n        this.snareNoteCountEnabled = snareNoteCountEnabled;\r\n        this.accentNoteCountEnabled = accentNoteCountEnabled;\r\n        this.restNoteCountEnabled = restNoteCountEnabled;\r\n        this.mandatoryKickPlacements = mandatoryKickPlacements;\r\n        this.mandatorySnarePlacements = mandatorySnarePlacements;\r\n        this.mandatoryAccentPlacements = mandatoryAccentPlacements;\r\n        this.mandatoryRestPlacements = mandatoryRestPlacements;\r\n        this.stickingStyle = stickingStyle;\r\n        \r\n        this.subdivision = this.header.translateLengthToInt();\r\n    }\r\n}\r\n\r\nexport default GenerateSheetMusicConfig;","import ENoteDuration from '../Enums/ENoteDuration';\r\n\r\nclass Header {\r\n\r\n    title: string;\r\n    meter: string;\r\n    composer: string;\r\n    key: string;\r\n    length: ENoteDuration;\r\n\r\n\r\n    constructor(title: string, meter: string = '4/4', composer: string = 'Chongo Johngo', key: string = 'C', length: ENoteDuration = ENoteDuration.sixteenth) {\r\n        this.title = title;\r\n        this.meter = meter;\r\n        this.composer = composer;\r\n        this.key = key;\r\n        this.length = length;\r\n    }\r\n    \r\n    translateLengthToInt() {\r\n        switch (this.length) {\r\n            case ENoteDuration.sixteenth:\r\n                return 16;\r\n            default:\r\n                throw Error('Unsupported subdivision');\r\n        }\r\n    }\r\n\r\n    translateLengthToFractionString() {\r\n        switch (this.length) {\r\n            case ENoteDuration.sixteenth:\r\n                return '1/16';\r\n            default:\r\n                throw Error('Unsupported subdivision');\r\n        }\r\n    }\r\n}\r\n\r\nexport default Header;","import {\r\n    Card,\r\n    CardContent,\r\n    FormControl, FormControlLabel,\r\n    FormLabel,\r\n    InputLabel,\r\n    MenuItem,\r\n    Paper, Radio,\r\n    RadioGroup,\r\n    Select, Switch\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport GenerateSheetMusicConfig from \"../models/GenerateSheetMusicConfig\";\r\n\r\ninterface RadioButtonArrayTabProps {\r\n    config: GenerateSheetMusicConfig;\r\n    setConfig: (arg: GenerateSheetMusicConfig) => void;\r\n    selection: string;\r\n    setSelection: (arg: string) => void;\r\n    mode: string;\r\n}\r\n\r\nexport default function RadioButtonArrayTab(props: RadioButtonArrayTabProps) {\r\n\r\n    const { config, setConfig, selection, setSelection, mode } = props;\r\n\r\n    const getConfigFieldFromSelection = (selection: string, mode: string, config: GenerateSheetMusicConfig) => {\r\n        switch (selection) {\r\n            case 'snare':\r\n                return mode === 'consecutive' ? config.maxConsecutiveSnares.toString() : config.snareNoteCount.toString();\r\n            case 'kick':\r\n                return mode === 'consecutive' ? config.maxConsecutiveKicks.toString() : config.kickNoteCount.toString();\r\n            case 'rests':\r\n                return mode === 'consecutive' ? config.maxConsecutiveRests.toString() : config.restNoteCount.toString();\r\n            case 'accents':\r\n                return mode === 'consecutive' ? config.maxConsecutiveAccents.toString() : config.accentNoteCount.toString();\r\n            case 'right':\r\n                return config.maxConsecutiveRightHandStickings.toString();\r\n            case 'left': \r\n                return config.maxConsecutiveLeftHandStickings.toString();\r\n        }\r\n    };\r\n\r\n    const setConfigFieldFromSelection = (value: number, selection: string, mode: string, config: GenerateSheetMusicConfig) => {\r\n        switch (selection) {\r\n            case 'snare':\r\n                mode === 'consecutive' ? config.maxConsecutiveSnares = value : config.snareNoteCount = value;\r\n                break;\r\n            case 'kick':\r\n                mode === 'consecutive' ? config.maxConsecutiveKicks = value : config.kickNoteCount = value;\r\n                break;\r\n            case 'rests':\r\n                mode === 'consecutive' ? config.maxConsecutiveRests = value : config.restNoteCount = value;\r\n                break;\r\n            case 'accents':\r\n                mode === 'consecutive' ? config.maxConsecutiveAccents = value : config.accentNoteCount = value;\r\n                break;\r\n            case 'right':\r\n                config.maxConsecutiveRightHandStickings = value;\r\n                break;\r\n            case 'left':\r\n                config.maxConsecutiveLeftHandStickings = value;\r\n                break;\r\n        }\r\n    };\r\n    \r\n    const onChange = (event: any) => {\r\n        setConfigFieldFromSelection(parseInt(event.target.value), selection, mode, config);\r\n        let newConfig = {...config, header: config.header};\r\n        setConfig(newConfig);\r\n    };\r\n\r\n    const selectionChange = (event: any) => {\r\n        setSelection(event.target.value);\r\n    };\r\n    \r\n    const handleCheckbox = (event: any) => {\r\n        switch (selection) {\r\n            case 'snare':\r\n                config.snareNoteCountEnabled = event.target.checked;\r\n                break;\r\n            case 'kick':\r\n                config.kickNoteCountEnabled = event.target.checked;\r\n                break;\r\n            case 'accents':\r\n                config.accentNoteCountEnabled = event.target.checked;\r\n                break;\r\n            case 'rests':\r\n                config.restNoteCountEnabled = event.target.checked;\r\n                break;\r\n        }\r\n\r\n        let newConfig = {...config, header: config.header};\r\n        setConfig(newConfig);\r\n    };\r\n\r\n    let value = getConfigFieldFromSelection(selection, mode, config);\r\n\r\n    let checked = false;\r\n    switch (selection) {\r\n        case 'snare':\r\n            checked = config.snareNoteCountEnabled;\r\n            break;\r\n        case 'kick':\r\n            checked = config.kickNoteCountEnabled;\r\n            break;\r\n        case 'accents':\r\n            checked = config.accentNoteCountEnabled;\r\n            break;\r\n        case 'rests':\r\n            checked = config.restNoteCountEnabled;\r\n            break;\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                '& > *': {\r\n                    margin: theme.spacing(1),\r\n                },\r\n            },\r\n            formControl: {\r\n                margin: theme.spacing(1),\r\n                minWidth: 120,\r\n            },\r\n            cardRoot: {\r\n                minWidth: 275,\r\n            },\r\n            bullet: {\r\n                display: 'inline-block',\r\n                margin: '0 2px',\r\n                transform: 'scale(0.8)',\r\n            },\r\n            title: {\r\n                fontSize: 14,\r\n            },\r\n            pos: {\r\n                marginBottom: 12,\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Card className={classes.cardRoot}>\r\n            <CardContent>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Hit Type</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={selection}\r\n                        onChange={selectionChange}\r\n                    >\r\n                        <MenuItem value={'snare'}>Snare</MenuItem>\r\n                        <MenuItem value={'kick'}>Kick</MenuItem>\r\n                        <MenuItem value={'rests'}>Rests</MenuItem>\r\n                        <MenuItem value={'accents'}>Accents</MenuItem>\r\n                        {mode === 'consecutive' &&\r\n                        <MenuItem value={'right'}>Right Hand Sticking</MenuItem>}\r\n                        {mode === 'consecutive' &&\r\n                        <MenuItem value={'left'}>Left Hand Sticking</MenuItem>}\r\n                    </Select>\r\n                    {mode !== 'consecutive' &&\r\n                    <FormControlLabel label=\"Enable\" control={<Switch checked={checked} onChange={handleCheckbox} name=\"enable\"/>}/>}\r\n                </FormControl>\r\n                <FormControl component=\"fieldset\">\r\n                    {mode === 'consecutive' &&\r\n                    <FormLabel component=\"legend\">Maximum Number of Consecutive Hits Allowed</FormLabel>}\r\n                    {mode !== 'consecutive' &&\r\n                        <FormLabel component=\"legend\">Exact Number of Hits Allowed</FormLabel>}\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={onChange}>\r\n                        <Paper>\r\n                            {mode !== 'consecutive' &&\r\n                            <FormControlLabel value=\"0\" control={<Radio/>} label=\"0\"/>}\r\n                            <FormControlLabel value=\"1\" control={<Radio/>} label=\"1\"/>\r\n                            <FormControlLabel value=\"2\" control={<Radio/>} label=\"2\"/>\r\n                            <FormControlLabel value=\"3\" control={<Radio/>} label=\"3\"/>\r\n                            <FormControlLabel value=\"4\" control={<Radio/>} label=\"4\"/>\r\n                        </Paper>\r\n                        <Paper>\r\n                            <FormControlLabel value=\"5\" control={<Radio/>} label=\"5\"/>\r\n                            <FormControlLabel value=\"6\" control={<Radio/>} label=\"6\"/>\r\n                            <FormControlLabel value=\"7\" control={<Radio/>} label=\"7\"/>\r\n                            <FormControlLabel value=\"8\" control={<Radio/>} label=\"8\"/>\r\n                        </Paper>\r\n                        <Paper>\r\n                            <FormControlLabel value=\"9\" control={<Radio/>} label=\"9\"/>\r\n                            <FormControlLabel value=\"10\" control={<Radio/>} label=\"10\"/>\r\n                            <FormControlLabel value=\"11\" control={<Radio/>} label=\"11\"/>\r\n                            <FormControlLabel value=\"12\" control={<Radio/>} label=\"12\"/>\r\n                        </Paper>\r\n                        <Paper>\r\n                            <FormControlLabel value=\"13\" control={<Radio/>} label=\"13\"/>\r\n                            <FormControlLabel value=\"14\" control={<Radio/>} label=\"14\"/>\r\n                            <FormControlLabel value=\"15\" control={<Radio/>} label=\"15\"/>\r\n                            <FormControlLabel value=\"16\" control={<Radio/>} label=\"16\"/>\r\n                        </Paper>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import {\r\n    Card,\r\n    CardContent,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup, FormHelperText,\r\n    FormLabel,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select, Switch\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport GenerateSheetMusicConfig from \"../models/GenerateSheetMusicConfig\";\r\nimport ENotePlacement from \"../Enums/ENotePlacement\";\r\n\r\ninterface SwitchArrayTabProps {\r\n    selection: string;\r\n    setSelection: (arg: string) => void;\r\n    config: GenerateSheetMusicConfig;\r\n    setConfig: (arg: GenerateSheetMusicConfig) => void;\r\n}\r\n\r\nexport default function SwitchArrayTab(props: SwitchArrayTabProps) {\r\n\r\n    const { selection, setSelection, config, setConfig } = props;\r\n\r\n    const getConfigFieldFromSelection = (selection: string, switchIdentifier: ENotePlacement, config: GenerateSheetMusicConfig) => {\r\n        switch (selection) {\r\n            case 'snare':\r\n                return config.mandatorySnarePlacements.find((item) => { return item === switchIdentifier}) != null;\r\n            case 'kick':\r\n                return config.mandatoryKickPlacements.find((item) => { return item === switchIdentifier}) != null;\r\n            case 'rests':\r\n                return config.mandatoryRestPlacements.find((item) => { return item === switchIdentifier}) != null;\r\n            case 'accents':\r\n                return config.mandatoryAccentPlacements.find((item) => { return item === switchIdentifier}) != null;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const addConfigFieldFromSelection = (value: ENotePlacement, selection: string, config: GenerateSheetMusicConfig) => {\r\n        switch (selection) {\r\n            case 'snare':\r\n                if (!config.mandatorySnarePlacements.includes(value)) { config.mandatorySnarePlacements.push(value); }\r\n                break;\r\n            case 'kick':\r\n                if (!config.mandatoryKickPlacements.includes(value)) { config.mandatoryKickPlacements.push(value); }\r\n                break;\r\n            case 'rests':\r\n                if (!config.mandatoryRestPlacements.includes(value)) { config.mandatoryRestPlacements.push(value); }\r\n                break;\r\n            case 'accents':\r\n                if (!config.mandatoryAccentPlacements.includes(value)) { config.mandatoryAccentPlacements.push(value); }\r\n                break;\r\n        }\r\n    };\r\n\r\n    const removeConfigFieldFromSelection = (value: ENotePlacement, selection: string, config: GenerateSheetMusicConfig) => {\r\n        let index = 0;\r\n        switch (selection) {\r\n            case 'snare':\r\n                index = config.mandatorySnarePlacements.findIndex((item) => { return item === value });\r\n                config.mandatorySnarePlacements.splice(index, 1);\r\n                break;\r\n            case 'kick':\r\n                index = config.mandatoryKickPlacements.findIndex((item) => { return item === value });\r\n                config.mandatoryKickPlacements.splice(index, 1);              \r\n                break;\r\n            case 'rests':\r\n                index = config.mandatoryRestPlacements.findIndex((item) => { return item === value });\r\n                config.mandatoryRestPlacements.splice(index, 1);               \r\n                break;\r\n            case 'accents':\r\n                index = config.mandatoryAccentPlacements.findIndex((item) => { return item === value });\r\n                config.mandatoryAccentPlacements.splice(index, 1);\r\n                break;\r\n        }\r\n    };\r\n    \r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                '& > *': {\r\n                    margin: theme.spacing(1),\r\n                },\r\n            },\r\n            formControl: {\r\n                margin: theme.spacing(1),\r\n                minWidth: 120,\r\n            },\r\n            cardRoot: {\r\n                minWidth: 275,\r\n            },\r\n            bullet: {\r\n                display: 'inline-block',\r\n                margin: '0 2px',\r\n                transform: 'scale(0.8)',\r\n            },\r\n            title: {\r\n                fontSize: 14,\r\n            },\r\n            pos: {\r\n                marginBottom: 12,\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n\r\n    const selectionChange = (event: any) => {\r\n        setSelection(event.target.value);\r\n    };\r\n    \r\n    const handleChange = (event: any) => {\r\n        const notePlacement: ENotePlacement = parseInt(ENotePlacement[event.target.name]);\r\n        if (event.target.checked) {\r\n            addConfigFieldFromSelection(notePlacement, selection, config);\r\n        } else {\r\n            removeConfigFieldFromSelection(notePlacement, selection, config);\r\n        }\r\n\r\n        let newConfig = {...config, header: config.header};\r\n        setConfig(newConfig);\r\n    };\r\n    \r\n    return (\r\n        <Card className={classes.cardRoot}>\r\n            <CardContent>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Hit Type</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={selection}\r\n                        onChange={selectionChange}\r\n\r\n                    >\r\n                        <MenuItem value={'snare'}>Snare</MenuItem>\r\n                        <MenuItem value={'kick'}>Kick</MenuItem>\r\n                        <MenuItem value={'rests'}>Rests</MenuItem>\r\n                        <MenuItem value={'accents'}>Accents</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\"/>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.one, config)} onChange={handleChange} name=\"one\"/>}\r\n                            label=\"1\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.oneE, config)} onChange={handleChange} name=\"oneE\"/>}\r\n                            label=\"1E\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.oneAnd, config)} onChange={handleChange} name=\"oneAnd\"/>}\r\n                            label=\"1&\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.oneA, config)} onChange={handleChange} name=\"oneA\"/>}\r\n                            label=\"1A\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormHelperText>chongo</FormHelperText>\r\n                </FormControl>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\"/>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.two, config)} onChange={handleChange} name=\"two\"/>}\r\n                            label=\"2\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.twoE, config)} onChange={handleChange} name=\"twoE\"/>}\r\n                            label=\"2E\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.twoAnd, config)} onChange={handleChange} name=\"twoAnd\"/>}\r\n                            label=\"2&\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.twoA, config)} onChange={handleChange} name=\"twoA\"/>}\r\n                            label=\"2A\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormHelperText>chongo</FormHelperText>\r\n                </FormControl>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\"/>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.three, config)} onChange={handleChange} name=\"three\"/>}\r\n                            label=\"3\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.threeE, config)} onChange={handleChange} name=\"threeE\"/>}\r\n                            label=\"3E\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.threeAnd, config)} onChange={handleChange} name=\"threeAnd\"/>}\r\n                            label=\"3&\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.threeA, config)} onChange={handleChange} name=\"threeA\"/>}\r\n                            label=\"3A\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormHelperText>chongo</FormHelperText>\r\n                </FormControl>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\"/>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.four, config)} onChange={handleChange} name=\"four\"/>}\r\n                            label=\"4\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.fourE, config)} onChange={handleChange} name=\"fourE\"/>}\r\n                            label=\"4E\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.fourAnd, config)} onChange={handleChange} name=\"fourAnd\"/>}\r\n                            label=\"4&\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Switch checked={getConfigFieldFromSelection(selection, ENotePlacement.fourA, config)} onChange={handleChange} name=\"fourA\"/>}\r\n                            label=\"4A\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormHelperText>chongo</FormHelperText>\r\n                </FormControl>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","class AudioSampler {\r\n\r\n    context: AudioContext;\r\n    buffer: AudioBuffer;\r\n    source: AudioBufferSourceNode;\r\n    gain: GainNode;\r\n\r\n    constructor (context: AudioContext, buffer: AudioBuffer) {\r\n        this.context = context;\r\n        this.buffer = buffer;\r\n        this.source = this.context.createBufferSource();\r\n        this.gain = context.createGain();\r\n    }\r\n\r\n    setup() {\r\n        this.source = this.context.createBufferSource();\r\n        this.source.buffer = this.buffer;\r\n        this.source.connect(this.gain);\r\n        this.gain.connect(this.context.destination);\r\n        // this.source.connect(this.context.destination);\r\n    }\r\n\r\n    trigger(time: number, gain: number) {\r\n        this.setup();\r\n        this.gain.gain.setValueAtTime(gain, time);\r\n        this.source.start(time);\r\n        this.gain.gain.setValueAtTime(1, time + 0.1);\r\n        // this.source.stop(time + 0.1)\r\n    }\r\n}\r\n\r\nexport default AudioSampler;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport Abcjs from 'react-abcjs';\nimport Exercise from './models/Exercise';\nimport ExerciseEngine from './engines/ExcerciseEngine';\nimport GenerateSheetMusicConfig from './models/GenerateSheetMusicConfig';\nimport Header from \"./models/Header\";\nimport RadioButtonArrayTab from './commonComponents/RadioButtonArrayTab';\nimport {\n    AppBar,\n    Box,\n    Card,\n    CardActions,\n    CardContent,\n    FormControl, FormControlLabel, FormGroup,\n    FormLabel,\n    InputLabel,\n    MenuItem,\n    Select, Switch,\n    Tab,\n    Tabs,\n    TextField,\n    Tooltip,\n    Typography\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport SwitchArrayTab from \"./commonComponents/SwitchArrayTab\";\nimport ValidationEngine from \"./engines/ValidationEngine\";\nimport EStickingStyle from \"./Enums/EStickingStyle\";\nimport AudioSampler from \"./audioComponents/AudioSampler\";\nimport ENoteTypes from \"./Enums/ENoteTypes\";\nimport EAccents from \"./Enums/EAccents\";\nimport ENotePlacement from \"./Enums/ENotePlacement\";\n\nfunction App() {\n    const [savedExercises, setSavedExercises] = useState<Exercise[]>([new Exercise(`X:1\\nT:Paradiddles\\nM:4/4\\nC:Trad.\\nK:C\\nL:1/16\\n|:\"R\"c\"L\"c\"R\"c\"R\"c \"L\"c\"R\"c\"L\"c\"L\"c \"R\"c\"L\"c\"R\"c\"R\"c \"L\"c\"R\"c\"L\"c\"L\"c:|`, []), new Exercise(`X:1\\nT:Doubles\\nM:4/4\\nC:Trad.\\nK:C\\nL:1/16\\n|:\"R\"c\"R\"c\"L\"c\"L\"c \"R\"c\"R\"c\"L\"c\"L\"c \"R\"c\"R\"c\"L\"c\"L\"c \"R\"c\"R\"c\"L\"c\"L\"c:|`, [])]);\n    const [currentExercise, setCurrentExercise] = useState<Exercise>();\n    const [exercisesGenerated, setExercisesGenerated] = useState(1);\n    const [config, setConfig] = useState<GenerateSheetMusicConfig>(new GenerateSheetMusicConfig(new Header(`Super Dope Title ${exercisesGenerated}`),));\n\n    const [tabIndex, setTabIndex] = useState(0);\n\n    const [consecutiveHitsSelection, setConsecutiveHitsSelection] = useState('kick');\n    const [noteCountSelection, setNoteCountSelection] = useState('kick');\n    const [mandatoryNotePlacementSelection, setMandatoryNotePlacementSelection] = useState('kick');\n\n    const [measureName, setMeasureName] = useState(\"Greatest Measure of All Time\");\n    const [errorList, setErrorList] = useState<string[]>([]);\n    const [hiHatOnPlayback, setHiHatOnPlayback] = useState(false);\n    \n    \n    const playTrack = (exercise: Exercise) => {\n        \n        const quarterNoteInterval = 60/exercise.bpm;\n        const sixteenthNoteInterval = quarterNoteInterval/4;\n        \n        const audioContext = new AudioContext();\n        // const kick = new Kick(audioContext);\n        // const snare = new Snare(audioContext);\n        // const now = audioContext.currentTime;\n        \n        // kick.trigger(now);\n        // snare.trigger(now + 0.5);\n        \n        const sampleLoader = (url:any, context:any, callback:any) => {\n            const request = new XMLHttpRequest();\n            request.open('get', url, true);\n            request.responseType = 'arraybuffer';\n            request.onload = () => {\n                context.decodeAudioData(request.response, (buffer: AudioBuffer) => {\n                    callback(buffer);\n                });\n            };\n            request.withCredentials = false;\n            request.send();\n        };\n        \n        const hasAccents = exercise.measures[0].notes.findIndex((note) => {\n            return note.accent === EAccents.accented;\n        }) !== -1;\n\n        sampleLoader('snare.wav', audioContext, (buffer: AudioBuffer) => {\n            const snare = new AudioSampler(audioContext, buffer);\n\n            \n            sampleLoader('hihat.wav', audioContext, (buffer: AudioBuffer) => {\n                const hiHat = new AudioSampler(audioContext, buffer);\n\n                sampleLoader('kick1.wav', audioContext, (buffer: AudioBuffer) => {\n                    const kick = new AudioSampler(audioContext, buffer);\n\n                    if (exercise != null) {\n                        exercise.measures[0].notes.forEach((note, index) => {\n                            if (note.noteType === ENoteTypes.snare) {\n                                const unaccentedHit = hasAccents ? 0.5 : 1;\n                                const gain = note.accent === EAccents.accented ? 2 : unaccentedHit;\n                                snare.trigger(audioContext.currentTime + sixteenthNoteInterval * index, gain);\n                            } else if (note.noteType === ENoteTypes.kick) {\n                                kick.trigger(audioContext.currentTime + sixteenthNoteInterval * index, 1);\n                            }\n                            \n                            if (index % 2 == 0 && hiHatOnPlayback) {\n                                hiHat.trigger(audioContext.currentTime + sixteenthNoteInterval * index, 1);\n                            }\n                        });\n                    }\n                })\n            })\n        })\n    };\n    \n\n    useEffect(() => {\n        config.header.title = measureName;\n        let newConfig = {...config, header: config.header};\n        setConfig(newConfig);\n    }, [measureName]);\n    \n    useEffect(() => {\n        const newErrorList: string[] = [];\n        ValidationEngine.configIsValid(config, newErrorList);\n        setErrorList(newErrorList);\n    }, [config]);\n\n    const saveExercise = () => {\n        if (currentExercise) {\n            setSavedExercises([...savedExercises, currentExercise]);\n            setExercisesGenerated(exercisesGenerated + 1);\n        }\n    };\n\n    const generateNewExercise = () => {\n        const exercise = ExerciseEngine.generateNewSheetMusic(config);\n        if (Array.isArray(exercise)) {\n            setErrorList(exercise);\n            return;\n        } else {\n            const abcjsString = exercise.abcjsString;\n            const measures = exercise.measures;\n            const newExercise = new Exercise(abcjsString, measures);\n            setCurrentExercise(newExercise);\n        }\n    };\n\n    const stickingSelectionChange = (event: any) => {\n        config.stickingStyle = parseInt(EStickingStyle[event.target.value]);\n        let newConfig = {...config, header: config.header};\n        setConfig(newConfig);\n    };\n\n    const measureNameChange = (event: any) => {\n        setMeasureName(event.target.value);\n    };\n    \n    const updateHiHat = (event: any) => {\n        setHiHatOnPlayback(event.target.checked);\n    };\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            root: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                '& > *': {\n                    margin: theme.spacing(1),\n                },\n            },\n            formControl: {\n                margin: theme.spacing(1),\n                minWidth: 120,\n            },\n            cardRoot: {\n                minWidth: 275,\n            },\n            bullet: {\n                display: 'inline-block',\n                margin: '0 2px',\n                transform: 'scale(0.8)',\n            },\n            title: {\n                fontSize: 14,\n            },\n            pos: {\n                marginBottom: 12,\n            },\n            toolTip: {\n                fontSize: 20,\n            },\n        }),\n    );\n    const classes = useStyles();\n\n    interface TabPanelProps {\n        children?: React.ReactNode;\n        index: any;\n        value: any;\n    }\n\n    function TabPanel(props: TabPanelProps) {\n        const {children, value, index, ...other} = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`simple-tabpanel-${index}`}\n                aria-labelledby={`simple-tab-${index}`}\n                {...other}\n            >\n                {value === index && (\n                    <Box p={3}>\n                        <Typography>{children}</Typography>\n                    </Box>\n                )}\n            </div>\n        );\n    }\n\n    function a11yProps(index: any) {\n        return {\n            id: `simple-tab-${index}`,\n            'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setTabIndex(newValue);\n    };\n\n    const bpmChange = (event: any) => {\n        if (currentExercise) {\n            let currentExerciseCopy = {\n                ...currentExercise,\n                bpm: parseInt(event.target.value),\n                measures: currentExercise.measures\n            };\n            setCurrentExercise(currentExerciseCopy);\n        }\n    };\n\n    // @ts-ignore\n    // @ts-ignore\n    return (\n        <div className=\"App\">\n            <header>\n            </header>\n            <div className='App-header'>COOL DRUM BEAT GENERATION WEBSITE</div>\n            <Card className={classes.cardRoot}>\n                <CardContent>\n                    {savedExercises.map((exercise) => {\n                        const deleteCallback = () => {\n                            const firstIndexOfExercise = savedExercises.indexOf(exercise);\n                            const savedExercisesCopy = [...savedExercises];\n                            savedExercisesCopy.splice(firstIndexOfExercise, 1);\n                            setSavedExercises(savedExercisesCopy);\n                        };\n                        const playCallback = () => {\n                            playTrack(exercise);\n                        };\n                        return (\n                            <Card className={classes.cardRoot}>\n                                <CardContent>\n                                    <div>\n                                        <Abcjs\n                                            abcNotation={exercise.sheetMusic}\n                                            parserParams={{}}\n                                            engraverParams={{responsive: 'resize'}}\n                                            renderParams={{viewportHorizontal: true}}\n                                        />\n                                        <Button variant=\"contained\" color=\"secondary\"\n                                                onClick={deleteCallback}>Delete</Button>\n                                        <Button variant=\"contained\" color=\"primary\"\n                                                onClick={playCallback}\n                                        >PLAY</Button>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        );\n                    })}\n                </CardContent>\n            </Card>\n            {currentExercise &&\n            <Card className={classes.cardRoot}>\n                <CardContent>\n                    <Abcjs\n                        abcNotation={currentExercise.sheetMusic}\n                        parserParams={{}}\n                        engraverParams={{responsive: 'resize'}}\n                        renderParams={{viewportHorizontal: true}}\n                    />\n                    <Button variant=\"contained\" color=\"primary\"\n                            onClick={() => {playTrack(currentExercise)}}\n                    >PLAY</Button>\n                    <TextField style={{ marginLeft: '18px'}} value={currentExercise.bpm} onChange={bpmChange} id=\"standard-basic\" label=\"BPM of Playback\" />\n                    <FormControlLabel\n                        control={<Switch checked={hiHatOnPlayback} onChange={updateHiHat} name=\"oneAnd\"/>}\n                        label=\"Enable HiHat on playback?\"\n                    />\n                </CardContent>\n            </Card>\n            }\n            <AppBar position=\"static\">\n                <Tabs value={tabIndex} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Maximum Consecutive Number of Hit\" {...a11yProps(0)} />\n                    <Tab label=\"Exact Number Of Each Hit Per Measure\" {...a11yProps(1)} />\n                    <Tab label=\"Specify Specific Note Placements\" {...a11yProps(2)} />\n                    <Tab label=\"Sticking Style\" {...a11yProps(3)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabIndex} index={0}>\n                <RadioButtonArrayTab mode={'consecutive'} selection={consecutiveHitsSelection}\n                                     setSelection={setConsecutiveHitsSelection} config={config} setConfig={setConfig}/>\n            </TabPanel>\n            <TabPanel value={tabIndex} index={1}>\n                <RadioButtonArrayTab mode={'noteCount'} selection={noteCountSelection}\n                                     setSelection={setNoteCountSelection} config={config} setConfig={setConfig}/>\n            </TabPanel>\n            <TabPanel value={tabIndex} index={2}>\n                <SwitchArrayTab selection={mandatoryNotePlacementSelection}\n                                setSelection={setMandatoryNotePlacementSelection} config={config}\n                                setConfig={setConfig}/>\n            </TabPanel>\n            <TabPanel value={tabIndex} index={3}>\n                <Card className={classes.cardRoot}>\n                    <CardContent>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Sticking Pattern</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={EStickingStyle[config.stickingStyle]}\n                                onChange={stickingSelectionChange}\n                            >\n                                <MenuItem value={'none'}>None</MenuItem>\n                                <MenuItem value={'naturalSticking'}>Natural</MenuItem>\n                                <MenuItem value={'alternating'}>Alternating</MenuItem>\n                                <MenuItem value={'random'}>Random</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            </TabPanel>\n            <Card className={classes.cardRoot}>\n                <CardContent>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Generation Controls</FormLabel>\n                        <TextField value={measureName} onChange={measureNameChange} id=\"standard-basic\"\n                                   label=\"Pattern Name\"/>\n                        <CardActions>\n                            <Tooltip title={<span style={{ fontSize: '18px'}}>{errorList}</span>}>\n                                <span style={{ cursor: 'not-allowed' }}>\n                                <Button disabled={errorList.length > 0} variant=\"contained\"\n                                        onClick={generateNewExercise}>Generate Measure</Button>\n                                </span>\n                            </Tooltip>\n                            <Button variant=\"contained\" color=\"primary\" onClick={saveExercise}>SAVE</Button>\n                        </CardActions>\n                    </FormControl>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}